
DIGITAL_ALARM_CLOCK.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000026ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  000026ac  00002740  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800084  00800084  00002764  2**0
                  ALLOC
  3 .stab         000014e8  00000000  00000000  00002764  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a94  00000000  00000000  00003c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000046e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004820  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004990  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000065d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000074c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008274  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000083d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00008661  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008e2f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 fd 10 	jmp	0x21fa	; 0x21fa <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ea       	ldi	r30, 0xAC	; 172
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 38       	cpi	r26, 0x84	; 132
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a4 e8       	ldi	r26, 0x84	; 132
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 38       	cpi	r26, 0x8A	; 138
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a3 05 	call	0xb46	; 0xb46 <main>
      8a:	0c 94 54 13 	jmp	0x26a8	; 0x26a8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 ec 12 	jmp	0x25d8	; 0x25d8 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	ab e7       	ldi	r26, 0x7B	; 123
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 08 13 	jmp	0x2610	; 0x2610 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 14 13 	jmp	0x2628	; 0x2628 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 14 13 	jmp	0x2628	; 0x2628 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 ec 12 	jmp	0x25d8	; 0x25d8 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	8b e7       	ldi	r24, 0x7B	; 123
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 08 13 	jmp	0x2610	; 0x2610 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 14 13 	jmp	0x2628	; 0x2628 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 14 13 	jmp	0x2628	; 0x2628 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 14 13 	jmp	0x2628	; 0x2628 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 18 13 	jmp	0x2630	; 0x2630 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <main>:
static volatile int HOU =0;


int main()

{
     b46:	0f 93       	push	r16
     b48:	1f 93       	push	r17
     b4a:	df 93       	push	r29
     b4c:	cf 93       	push	r28
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	ce 5c       	subi	r28, 0xCE	; 206
     b54:	d0 40       	sbci	r29, 0x00	; 0
     b56:	0f b6       	in	r0, 0x3f	; 63
     b58:	f8 94       	cli
     b5a:	de bf       	out	0x3e, r29	; 62
     b5c:	0f be       	out	0x3f, r0	; 63
     b5e:	cd bf       	out	0x3d, r28	; 61

    DDRA = 0b11000000;
     b60:	ea e3       	ldi	r30, 0x3A	; 58
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	80 ec       	ldi	r24, 0xC0	; 192
     b66:	80 83       	st	Z, r24

    DDRC = 0xFF;
     b68:	e4 e3       	ldi	r30, 0x34	; 52
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	8f ef       	ldi	r24, 0xFF	; 255
     b6e:	80 83       	st	Z, r24

    DDRD = 0xFF;
     b70:	e1 e3       	ldi	r30, 0x31	; 49
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	8f ef       	ldi	r24, 0xFF	; 255
     b76:	80 83       	st	Z, r24



    TCCR1B |=(1<<CS12)|(1<<CS10)|(1<<WGM12);
     b78:	ae e4       	ldi	r26, 0x4E	; 78
     b7a:	b0 e0       	ldi	r27, 0x00	; 0
     b7c:	ee e4       	ldi	r30, 0x4E	; 78
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	80 81       	ld	r24, Z
     b82:	8d 60       	ori	r24, 0x0D	; 13
     b84:	8c 93       	st	X, r24

    OCR1A=10800;
     b86:	ea e4       	ldi	r30, 0x4A	; 74
     b88:	f0 e0       	ldi	r31, 0x00	; 0
     b8a:	80 e3       	ldi	r24, 0x30	; 48
     b8c:	9a e2       	ldi	r25, 0x2A	; 42
     b8e:	91 83       	std	Z+1, r25	; 0x01
     b90:	80 83       	st	Z, r24

    sei();
     b92:	78 94       	sei

    TIMSK |=(1<<OCIE1A);
     b94:	a9 e5       	ldi	r26, 0x59	; 89
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	e9 e5       	ldi	r30, 0x59	; 89
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	80 61       	ori	r24, 0x10	; 16
     ba0:	8c 93       	st	X, r24

    char SHOWHOU [2];



    int ALSEC = 0;
     ba2:	fe 01       	movw	r30, r28
     ba4:	e5 54       	subi	r30, 0x45	; 69
     ba6:	ff 4f       	sbci	r31, 0xFF	; 255
     ba8:	11 82       	std	Z+1, r1	; 0x01
     baa:	10 82       	st	Z, r1

    int ALMIN = 0;
     bac:	fe 01       	movw	r30, r28
     bae:	e7 54       	subi	r30, 0x47	; 71
     bb0:	ff 4f       	sbci	r31, 0xFF	; 255
     bb2:	11 82       	std	Z+1, r1	; 0x01
     bb4:	10 82       	st	Z, r1

    int ALHOU = 0;
     bb6:	fe 01       	movw	r30, r28
     bb8:	e9 54       	subi	r30, 0x49	; 73
     bba:	ff 4f       	sbci	r31, 0xFF	; 255
     bbc:	11 82       	std	Z+1, r1	; 0x01
     bbe:	10 82       	st	Z, r1

    char SHOWALMIN [2];

    char SHOWALHOU [2];

    send_a_command(0x01); //Clear Screen 0x01 = 00000001
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>
     bc6:	fe 01       	movw	r30, r28
     bc8:	ed 54       	subi	r30, 0x4D	; 77
     bca:	ff 4f       	sbci	r31, 0xFF	; 255
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	a8 e4       	ldi	r26, 0x48	; 72
     bd2:	b2 e4       	ldi	r27, 0x42	; 66
     bd4:	80 83       	st	Z, r24
     bd6:	91 83       	std	Z+1, r25	; 0x01
     bd8:	a2 83       	std	Z+2, r26	; 0x02
     bda:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bdc:	8e 01       	movw	r16, r28
     bde:	01 55       	subi	r16, 0x51	; 81
     be0:	1f 4f       	sbci	r17, 0xFF	; 255
     be2:	fe 01       	movw	r30, r28
     be4:	ed 54       	subi	r30, 0x4D	; 77
     be6:	ff 4f       	sbci	r31, 0xFF	; 255
     be8:	60 81       	ld	r22, Z
     bea:	71 81       	ldd	r23, Z+1	; 0x01
     bec:	82 81       	ldd	r24, Z+2	; 0x02
     bee:	93 81       	ldd	r25, Z+3	; 0x03
     bf0:	20 e0       	ldi	r18, 0x00	; 0
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	4a ef       	ldi	r20, 0xFA	; 250
     bf6:	54 e4       	ldi	r21, 0x44	; 68
     bf8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     bfc:	dc 01       	movw	r26, r24
     bfe:	cb 01       	movw	r24, r22
     c00:	f8 01       	movw	r30, r16
     c02:	80 83       	st	Z, r24
     c04:	91 83       	std	Z+1, r25	; 0x01
     c06:	a2 83       	std	Z+2, r26	; 0x02
     c08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c0a:	fe 01       	movw	r30, r28
     c0c:	e1 55       	subi	r30, 0x51	; 81
     c0e:	ff 4f       	sbci	r31, 0xFF	; 255
     c10:	60 81       	ld	r22, Z
     c12:	71 81       	ldd	r23, Z+1	; 0x01
     c14:	82 81       	ldd	r24, Z+2	; 0x02
     c16:	93 81       	ldd	r25, Z+3	; 0x03
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	40 e8       	ldi	r20, 0x80	; 128
     c1e:	5f e3       	ldi	r21, 0x3F	; 63
     c20:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     c24:	88 23       	and	r24, r24
     c26:	44 f4       	brge	.+16     	; 0xc38 <main+0xf2>
		__ticks = 1;
     c28:	fe 01       	movw	r30, r28
     c2a:	e3 55       	subi	r30, 0x53	; 83
     c2c:	ff 4f       	sbci	r31, 0xFF	; 255
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	91 83       	std	Z+1, r25	; 0x01
     c34:	80 83       	st	Z, r24
     c36:	64 c0       	rjmp	.+200    	; 0xd00 <main+0x1ba>
	else if (__tmp > 65535)
     c38:	fe 01       	movw	r30, r28
     c3a:	e1 55       	subi	r30, 0x51	; 81
     c3c:	ff 4f       	sbci	r31, 0xFF	; 255
     c3e:	60 81       	ld	r22, Z
     c40:	71 81       	ldd	r23, Z+1	; 0x01
     c42:	82 81       	ldd	r24, Z+2	; 0x02
     c44:	93 81       	ldd	r25, Z+3	; 0x03
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	3f ef       	ldi	r19, 0xFF	; 255
     c4a:	4f e7       	ldi	r20, 0x7F	; 127
     c4c:	57 e4       	ldi	r21, 0x47	; 71
     c4e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     c52:	18 16       	cp	r1, r24
     c54:	0c f0       	brlt	.+2      	; 0xc58 <main+0x112>
     c56:	43 c0       	rjmp	.+134    	; 0xcde <main+0x198>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c58:	fe 01       	movw	r30, r28
     c5a:	ed 54       	subi	r30, 0x4D	; 77
     c5c:	ff 4f       	sbci	r31, 0xFF	; 255
     c5e:	60 81       	ld	r22, Z
     c60:	71 81       	ldd	r23, Z+1	; 0x01
     c62:	82 81       	ldd	r24, Z+2	; 0x02
     c64:	93 81       	ldd	r25, Z+3	; 0x03
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	40 e2       	ldi	r20, 0x20	; 32
     c6c:	51 e4       	ldi	r21, 0x41	; 65
     c6e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     c72:	dc 01       	movw	r26, r24
     c74:	cb 01       	movw	r24, r22
     c76:	8e 01       	movw	r16, r28
     c78:	03 55       	subi	r16, 0x53	; 83
     c7a:	1f 4f       	sbci	r17, 0xFF	; 255
     c7c:	bc 01       	movw	r22, r24
     c7e:	cd 01       	movw	r24, r26
     c80:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c84:	dc 01       	movw	r26, r24
     c86:	cb 01       	movw	r24, r22
     c88:	f8 01       	movw	r30, r16
     c8a:	91 83       	std	Z+1, r25	; 0x01
     c8c:	80 83       	st	Z, r24
     c8e:	1f c0       	rjmp	.+62     	; 0xcce <main+0x188>
     c90:	fe 01       	movw	r30, r28
     c92:	e5 55       	subi	r30, 0x55	; 85
     c94:	ff 4f       	sbci	r31, 0xFF	; 255
     c96:	88 ec       	ldi	r24, 0xC8	; 200
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	91 83       	std	Z+1, r25	; 0x01
     c9c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c9e:	fe 01       	movw	r30, r28
     ca0:	e5 55       	subi	r30, 0x55	; 85
     ca2:	ff 4f       	sbci	r31, 0xFF	; 255
     ca4:	80 81       	ld	r24, Z
     ca6:	91 81       	ldd	r25, Z+1	; 0x01
     ca8:	01 97       	sbiw	r24, 0x01	; 1
     caa:	f1 f7       	brne	.-4      	; 0xca8 <main+0x162>
     cac:	fe 01       	movw	r30, r28
     cae:	e5 55       	subi	r30, 0x55	; 85
     cb0:	ff 4f       	sbci	r31, 0xFF	; 255
     cb2:	91 83       	std	Z+1, r25	; 0x01
     cb4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cb6:	de 01       	movw	r26, r28
     cb8:	a3 55       	subi	r26, 0x53	; 83
     cba:	bf 4f       	sbci	r27, 0xFF	; 255
     cbc:	fe 01       	movw	r30, r28
     cbe:	e3 55       	subi	r30, 0x53	; 83
     cc0:	ff 4f       	sbci	r31, 0xFF	; 255
     cc2:	80 81       	ld	r24, Z
     cc4:	91 81       	ldd	r25, Z+1	; 0x01
     cc6:	01 97       	sbiw	r24, 0x01	; 1
     cc8:	11 96       	adiw	r26, 0x01	; 1
     cca:	9c 93       	st	X, r25
     ccc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cce:	fe 01       	movw	r30, r28
     cd0:	e3 55       	subi	r30, 0x53	; 83
     cd2:	ff 4f       	sbci	r31, 0xFF	; 255
     cd4:	80 81       	ld	r24, Z
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	00 97       	sbiw	r24, 0x00	; 0
     cda:	d1 f6       	brne	.-76     	; 0xc90 <main+0x14a>
     cdc:	27 c0       	rjmp	.+78     	; 0xd2c <main+0x1e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cde:	8e 01       	movw	r16, r28
     ce0:	03 55       	subi	r16, 0x53	; 83
     ce2:	1f 4f       	sbci	r17, 0xFF	; 255
     ce4:	fe 01       	movw	r30, r28
     ce6:	e1 55       	subi	r30, 0x51	; 81
     ce8:	ff 4f       	sbci	r31, 0xFF	; 255
     cea:	60 81       	ld	r22, Z
     cec:	71 81       	ldd	r23, Z+1	; 0x01
     cee:	82 81       	ldd	r24, Z+2	; 0x02
     cf0:	93 81       	ldd	r25, Z+3	; 0x03
     cf2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     cf6:	dc 01       	movw	r26, r24
     cf8:	cb 01       	movw	r24, r22
     cfa:	f8 01       	movw	r30, r16
     cfc:	91 83       	std	Z+1, r25	; 0x01
     cfe:	80 83       	st	Z, r24
     d00:	de 01       	movw	r26, r28
     d02:	a7 55       	subi	r26, 0x57	; 87
     d04:	bf 4f       	sbci	r27, 0xFF	; 255
     d06:	fe 01       	movw	r30, r28
     d08:	e3 55       	subi	r30, 0x53	; 83
     d0a:	ff 4f       	sbci	r31, 0xFF	; 255
     d0c:	80 81       	ld	r24, Z
     d0e:	91 81       	ldd	r25, Z+1	; 0x01
     d10:	8d 93       	st	X+, r24
     d12:	9c 93       	st	X, r25
     d14:	fe 01       	movw	r30, r28
     d16:	e7 55       	subi	r30, 0x57	; 87
     d18:	ff 4f       	sbci	r31, 0xFF	; 255
     d1a:	80 81       	ld	r24, Z
     d1c:	91 81       	ldd	r25, Z+1	; 0x01
     d1e:	01 97       	sbiw	r24, 0x01	; 1
     d20:	f1 f7       	brne	.-4      	; 0xd1e <main+0x1d8>
     d22:	fe 01       	movw	r30, r28
     d24:	e7 55       	subi	r30, 0x57	; 87
     d26:	ff 4f       	sbci	r31, 0xFF	; 255
     d28:	91 83       	std	Z+1, r25	; 0x01
     d2a:	80 83       	st	Z, r24

    _delay_ms(50);

    send_a_command(0x38);
     d2c:	88 e3       	ldi	r24, 0x38	; 56
     d2e:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>
     d32:	fe 01       	movw	r30, r28
     d34:	eb 55       	subi	r30, 0x5B	; 91
     d36:	ff 4f       	sbci	r31, 0xFF	; 255
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	a8 e4       	ldi	r26, 0x48	; 72
     d3e:	b2 e4       	ldi	r27, 0x42	; 66
     d40:	80 83       	st	Z, r24
     d42:	91 83       	std	Z+1, r25	; 0x01
     d44:	a2 83       	std	Z+2, r26	; 0x02
     d46:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d48:	8e 01       	movw	r16, r28
     d4a:	0f 55       	subi	r16, 0x5F	; 95
     d4c:	1f 4f       	sbci	r17, 0xFF	; 255
     d4e:	fe 01       	movw	r30, r28
     d50:	eb 55       	subi	r30, 0x5B	; 91
     d52:	ff 4f       	sbci	r31, 0xFF	; 255
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	82 81       	ldd	r24, Z+2	; 0x02
     d5a:	93 81       	ldd	r25, Z+3	; 0x03
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	4a ef       	ldi	r20, 0xFA	; 250
     d62:	54 e4       	ldi	r21, 0x44	; 68
     d64:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d68:	dc 01       	movw	r26, r24
     d6a:	cb 01       	movw	r24, r22
     d6c:	f8 01       	movw	r30, r16
     d6e:	80 83       	st	Z, r24
     d70:	91 83       	std	Z+1, r25	; 0x01
     d72:	a2 83       	std	Z+2, r26	; 0x02
     d74:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d76:	fe 01       	movw	r30, r28
     d78:	ef 55       	subi	r30, 0x5F	; 95
     d7a:	ff 4f       	sbci	r31, 0xFF	; 255
     d7c:	60 81       	ld	r22, Z
     d7e:	71 81       	ldd	r23, Z+1	; 0x01
     d80:	82 81       	ldd	r24, Z+2	; 0x02
     d82:	93 81       	ldd	r25, Z+3	; 0x03
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	40 e8       	ldi	r20, 0x80	; 128
     d8a:	5f e3       	ldi	r21, 0x3F	; 63
     d8c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d90:	88 23       	and	r24, r24
     d92:	44 f4       	brge	.+16     	; 0xda4 <main+0x25e>
		__ticks = 1;
     d94:	fe 01       	movw	r30, r28
     d96:	e1 56       	subi	r30, 0x61	; 97
     d98:	ff 4f       	sbci	r31, 0xFF	; 255
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	91 83       	std	Z+1, r25	; 0x01
     da0:	80 83       	st	Z, r24
     da2:	64 c0       	rjmp	.+200    	; 0xe6c <main+0x326>
	else if (__tmp > 65535)
     da4:	fe 01       	movw	r30, r28
     da6:	ef 55       	subi	r30, 0x5F	; 95
     da8:	ff 4f       	sbci	r31, 0xFF	; 255
     daa:	60 81       	ld	r22, Z
     dac:	71 81       	ldd	r23, Z+1	; 0x01
     dae:	82 81       	ldd	r24, Z+2	; 0x02
     db0:	93 81       	ldd	r25, Z+3	; 0x03
     db2:	20 e0       	ldi	r18, 0x00	; 0
     db4:	3f ef       	ldi	r19, 0xFF	; 255
     db6:	4f e7       	ldi	r20, 0x7F	; 127
     db8:	57 e4       	ldi	r21, 0x47	; 71
     dba:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     dbe:	18 16       	cp	r1, r24
     dc0:	0c f0       	brlt	.+2      	; 0xdc4 <main+0x27e>
     dc2:	43 c0       	rjmp	.+134    	; 0xe4a <main+0x304>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dc4:	fe 01       	movw	r30, r28
     dc6:	eb 55       	subi	r30, 0x5B	; 91
     dc8:	ff 4f       	sbci	r31, 0xFF	; 255
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	40 e2       	ldi	r20, 0x20	; 32
     dd8:	51 e4       	ldi	r21, 0x41	; 65
     dda:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     dde:	dc 01       	movw	r26, r24
     de0:	cb 01       	movw	r24, r22
     de2:	8e 01       	movw	r16, r28
     de4:	01 56       	subi	r16, 0x61	; 97
     de6:	1f 4f       	sbci	r17, 0xFF	; 255
     de8:	bc 01       	movw	r22, r24
     dea:	cd 01       	movw	r24, r26
     dec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     df0:	dc 01       	movw	r26, r24
     df2:	cb 01       	movw	r24, r22
     df4:	f8 01       	movw	r30, r16
     df6:	91 83       	std	Z+1, r25	; 0x01
     df8:	80 83       	st	Z, r24
     dfa:	1f c0       	rjmp	.+62     	; 0xe3a <main+0x2f4>
     dfc:	fe 01       	movw	r30, r28
     dfe:	e3 56       	subi	r30, 0x63	; 99
     e00:	ff 4f       	sbci	r31, 0xFF	; 255
     e02:	88 ec       	ldi	r24, 0xC8	; 200
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	91 83       	std	Z+1, r25	; 0x01
     e08:	80 83       	st	Z, r24
     e0a:	fe 01       	movw	r30, r28
     e0c:	e3 56       	subi	r30, 0x63	; 99
     e0e:	ff 4f       	sbci	r31, 0xFF	; 255
     e10:	80 81       	ld	r24, Z
     e12:	91 81       	ldd	r25, Z+1	; 0x01
     e14:	01 97       	sbiw	r24, 0x01	; 1
     e16:	f1 f7       	brne	.-4      	; 0xe14 <main+0x2ce>
     e18:	fe 01       	movw	r30, r28
     e1a:	e3 56       	subi	r30, 0x63	; 99
     e1c:	ff 4f       	sbci	r31, 0xFF	; 255
     e1e:	91 83       	std	Z+1, r25	; 0x01
     e20:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e22:	de 01       	movw	r26, r28
     e24:	a1 56       	subi	r26, 0x61	; 97
     e26:	bf 4f       	sbci	r27, 0xFF	; 255
     e28:	fe 01       	movw	r30, r28
     e2a:	e1 56       	subi	r30, 0x61	; 97
     e2c:	ff 4f       	sbci	r31, 0xFF	; 255
     e2e:	80 81       	ld	r24, Z
     e30:	91 81       	ldd	r25, Z+1	; 0x01
     e32:	01 97       	sbiw	r24, 0x01	; 1
     e34:	11 96       	adiw	r26, 0x01	; 1
     e36:	9c 93       	st	X, r25
     e38:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e3a:	fe 01       	movw	r30, r28
     e3c:	e1 56       	subi	r30, 0x61	; 97
     e3e:	ff 4f       	sbci	r31, 0xFF	; 255
     e40:	80 81       	ld	r24, Z
     e42:	91 81       	ldd	r25, Z+1	; 0x01
     e44:	00 97       	sbiw	r24, 0x00	; 0
     e46:	d1 f6       	brne	.-76     	; 0xdfc <main+0x2b6>
     e48:	27 c0       	rjmp	.+78     	; 0xe98 <main+0x352>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e4a:	8e 01       	movw	r16, r28
     e4c:	01 56       	subi	r16, 0x61	; 97
     e4e:	1f 4f       	sbci	r17, 0xFF	; 255
     e50:	fe 01       	movw	r30, r28
     e52:	ef 55       	subi	r30, 0x5F	; 95
     e54:	ff 4f       	sbci	r31, 0xFF	; 255
     e56:	60 81       	ld	r22, Z
     e58:	71 81       	ldd	r23, Z+1	; 0x01
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     e62:	dc 01       	movw	r26, r24
     e64:	cb 01       	movw	r24, r22
     e66:	f8 01       	movw	r30, r16
     e68:	91 83       	std	Z+1, r25	; 0x01
     e6a:	80 83       	st	Z, r24
     e6c:	de 01       	movw	r26, r28
     e6e:	a5 56       	subi	r26, 0x65	; 101
     e70:	bf 4f       	sbci	r27, 0xFF	; 255
     e72:	fe 01       	movw	r30, r28
     e74:	e1 56       	subi	r30, 0x61	; 97
     e76:	ff 4f       	sbci	r31, 0xFF	; 255
     e78:	80 81       	ld	r24, Z
     e7a:	91 81       	ldd	r25, Z+1	; 0x01
     e7c:	8d 93       	st	X+, r24
     e7e:	9c 93       	st	X, r25
     e80:	fe 01       	movw	r30, r28
     e82:	e5 56       	subi	r30, 0x65	; 101
     e84:	ff 4f       	sbci	r31, 0xFF	; 255
     e86:	80 81       	ld	r24, Z
     e88:	91 81       	ldd	r25, Z+1	; 0x01
     e8a:	01 97       	sbiw	r24, 0x01	; 1
     e8c:	f1 f7       	brne	.-4      	; 0xe8a <main+0x344>
     e8e:	fe 01       	movw	r30, r28
     e90:	e5 56       	subi	r30, 0x65	; 101
     e92:	ff 4f       	sbci	r31, 0xFF	; 255
     e94:	91 83       	std	Z+1, r25	; 0x01
     e96:	80 83       	st	Z, r24

    _delay_ms(50);

    send_a_command(0b00001111);
     e98:	8f e0       	ldi	r24, 0x0F	; 15
     e9a:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>
     e9e:	fe 01       	movw	r30, r28
     ea0:	e9 56       	subi	r30, 0x69	; 105
     ea2:	ff 4f       	sbci	r31, 0xFF	; 255
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	a8 e4       	ldi	r26, 0x48	; 72
     eaa:	b2 e4       	ldi	r27, 0x42	; 66
     eac:	80 83       	st	Z, r24
     eae:	91 83       	std	Z+1, r25	; 0x01
     eb0:	a2 83       	std	Z+2, r26	; 0x02
     eb2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     eb4:	8e 01       	movw	r16, r28
     eb6:	0d 56       	subi	r16, 0x6D	; 109
     eb8:	1f 4f       	sbci	r17, 0xFF	; 255
     eba:	fe 01       	movw	r30, r28
     ebc:	e9 56       	subi	r30, 0x69	; 105
     ebe:	ff 4f       	sbci	r31, 0xFF	; 255
     ec0:	60 81       	ld	r22, Z
     ec2:	71 81       	ldd	r23, Z+1	; 0x01
     ec4:	82 81       	ldd	r24, Z+2	; 0x02
     ec6:	93 81       	ldd	r25, Z+3	; 0x03
     ec8:	20 e0       	ldi	r18, 0x00	; 0
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	4a ef       	ldi	r20, 0xFA	; 250
     ece:	54 e4       	ldi	r21, 0x44	; 68
     ed0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ed4:	dc 01       	movw	r26, r24
     ed6:	cb 01       	movw	r24, r22
     ed8:	f8 01       	movw	r30, r16
     eda:	80 83       	st	Z, r24
     edc:	91 83       	std	Z+1, r25	; 0x01
     ede:	a2 83       	std	Z+2, r26	; 0x02
     ee0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ee2:	fe 01       	movw	r30, r28
     ee4:	ed 56       	subi	r30, 0x6D	; 109
     ee6:	ff 4f       	sbci	r31, 0xFF	; 255
     ee8:	60 81       	ld	r22, Z
     eea:	71 81       	ldd	r23, Z+1	; 0x01
     eec:	82 81       	ldd	r24, Z+2	; 0x02
     eee:	93 81       	ldd	r25, Z+3	; 0x03
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	40 e8       	ldi	r20, 0x80	; 128
     ef6:	5f e3       	ldi	r21, 0x3F	; 63
     ef8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     efc:	88 23       	and	r24, r24
     efe:	44 f4       	brge	.+16     	; 0xf10 <main+0x3ca>
		__ticks = 1;
     f00:	fe 01       	movw	r30, r28
     f02:	ef 56       	subi	r30, 0x6F	; 111
     f04:	ff 4f       	sbci	r31, 0xFF	; 255
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	91 83       	std	Z+1, r25	; 0x01
     f0c:	80 83       	st	Z, r24
     f0e:	64 c0       	rjmp	.+200    	; 0xfd8 <main+0x492>
	else if (__tmp > 65535)
     f10:	fe 01       	movw	r30, r28
     f12:	ed 56       	subi	r30, 0x6D	; 109
     f14:	ff 4f       	sbci	r31, 0xFF	; 255
     f16:	60 81       	ld	r22, Z
     f18:	71 81       	ldd	r23, Z+1	; 0x01
     f1a:	82 81       	ldd	r24, Z+2	; 0x02
     f1c:	93 81       	ldd	r25, Z+3	; 0x03
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	3f ef       	ldi	r19, 0xFF	; 255
     f22:	4f e7       	ldi	r20, 0x7F	; 127
     f24:	57 e4       	ldi	r21, 0x47	; 71
     f26:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     f2a:	18 16       	cp	r1, r24
     f2c:	0c f0       	brlt	.+2      	; 0xf30 <main+0x3ea>
     f2e:	43 c0       	rjmp	.+134    	; 0xfb6 <main+0x470>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f30:	fe 01       	movw	r30, r28
     f32:	e9 56       	subi	r30, 0x69	; 105
     f34:	ff 4f       	sbci	r31, 0xFF	; 255
     f36:	60 81       	ld	r22, Z
     f38:	71 81       	ldd	r23, Z+1	; 0x01
     f3a:	82 81       	ldd	r24, Z+2	; 0x02
     f3c:	93 81       	ldd	r25, Z+3	; 0x03
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	40 e2       	ldi	r20, 0x20	; 32
     f44:	51 e4       	ldi	r21, 0x41	; 65
     f46:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f4a:	dc 01       	movw	r26, r24
     f4c:	cb 01       	movw	r24, r22
     f4e:	8e 01       	movw	r16, r28
     f50:	0f 56       	subi	r16, 0x6F	; 111
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	bc 01       	movw	r22, r24
     f56:	cd 01       	movw	r24, r26
     f58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f5c:	dc 01       	movw	r26, r24
     f5e:	cb 01       	movw	r24, r22
     f60:	f8 01       	movw	r30, r16
     f62:	91 83       	std	Z+1, r25	; 0x01
     f64:	80 83       	st	Z, r24
     f66:	1f c0       	rjmp	.+62     	; 0xfa6 <main+0x460>
     f68:	fe 01       	movw	r30, r28
     f6a:	e1 57       	subi	r30, 0x71	; 113
     f6c:	ff 4f       	sbci	r31, 0xFF	; 255
     f6e:	88 ec       	ldi	r24, 0xC8	; 200
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	91 83       	std	Z+1, r25	; 0x01
     f74:	80 83       	st	Z, r24
     f76:	fe 01       	movw	r30, r28
     f78:	e1 57       	subi	r30, 0x71	; 113
     f7a:	ff 4f       	sbci	r31, 0xFF	; 255
     f7c:	80 81       	ld	r24, Z
     f7e:	91 81       	ldd	r25, Z+1	; 0x01
     f80:	01 97       	sbiw	r24, 0x01	; 1
     f82:	f1 f7       	brne	.-4      	; 0xf80 <main+0x43a>
     f84:	fe 01       	movw	r30, r28
     f86:	e1 57       	subi	r30, 0x71	; 113
     f88:	ff 4f       	sbci	r31, 0xFF	; 255
     f8a:	91 83       	std	Z+1, r25	; 0x01
     f8c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f8e:	de 01       	movw	r26, r28
     f90:	af 56       	subi	r26, 0x6F	; 111
     f92:	bf 4f       	sbci	r27, 0xFF	; 255
     f94:	fe 01       	movw	r30, r28
     f96:	ef 56       	subi	r30, 0x6F	; 111
     f98:	ff 4f       	sbci	r31, 0xFF	; 255
     f9a:	80 81       	ld	r24, Z
     f9c:	91 81       	ldd	r25, Z+1	; 0x01
     f9e:	01 97       	sbiw	r24, 0x01	; 1
     fa0:	11 96       	adiw	r26, 0x01	; 1
     fa2:	9c 93       	st	X, r25
     fa4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fa6:	fe 01       	movw	r30, r28
     fa8:	ef 56       	subi	r30, 0x6F	; 111
     faa:	ff 4f       	sbci	r31, 0xFF	; 255
     fac:	80 81       	ld	r24, Z
     fae:	91 81       	ldd	r25, Z+1	; 0x01
     fb0:	00 97       	sbiw	r24, 0x00	; 0
     fb2:	d1 f6       	brne	.-76     	; 0xf68 <main+0x422>
     fb4:	27 c0       	rjmp	.+78     	; 0x1004 <main+0x4be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fb6:	8e 01       	movw	r16, r28
     fb8:	0f 56       	subi	r16, 0x6F	; 111
     fba:	1f 4f       	sbci	r17, 0xFF	; 255
     fbc:	fe 01       	movw	r30, r28
     fbe:	ed 56       	subi	r30, 0x6D	; 109
     fc0:	ff 4f       	sbci	r31, 0xFF	; 255
     fc2:	60 81       	ld	r22, Z
     fc4:	71 81       	ldd	r23, Z+1	; 0x01
     fc6:	82 81       	ldd	r24, Z+2	; 0x02
     fc8:	93 81       	ldd	r25, Z+3	; 0x03
     fca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	f8 01       	movw	r30, r16
     fd4:	91 83       	std	Z+1, r25	; 0x01
     fd6:	80 83       	st	Z, r24
     fd8:	de 01       	movw	r26, r28
     fda:	a3 57       	subi	r26, 0x73	; 115
     fdc:	bf 4f       	sbci	r27, 0xFF	; 255
     fde:	fe 01       	movw	r30, r28
     fe0:	ef 56       	subi	r30, 0x6F	; 111
     fe2:	ff 4f       	sbci	r31, 0xFF	; 255
     fe4:	80 81       	ld	r24, Z
     fe6:	91 81       	ldd	r25, Z+1	; 0x01
     fe8:	8d 93       	st	X+, r24
     fea:	9c 93       	st	X, r25
     fec:	fe 01       	movw	r30, r28
     fee:	e3 57       	subi	r30, 0x73	; 115
     ff0:	ff 4f       	sbci	r31, 0xFF	; 255
     ff2:	80 81       	ld	r24, Z
     ff4:	91 81       	ldd	r25, Z+1	; 0x01
     ff6:	01 97       	sbiw	r24, 0x01	; 1
     ff8:	f1 f7       	brne	.-4      	; 0xff6 <main+0x4b0>
     ffa:	fe 01       	movw	r30, r28
     ffc:	e3 57       	subi	r30, 0x73	; 115
     ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    1000:	91 83       	std	Z+1, r25	; 0x01
    1002:	80 83       	st	Z, r24

    {



            itoa(HOU/10,SHOWHOU,10);
    1004:	80 91 88 00 	lds	r24, 0x0088
    1008:	90 91 89 00 	lds	r25, 0x0089
    100c:	2a e0       	ldi	r18, 0x0A	; 10
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	b9 01       	movw	r22, r18
    1012:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    1016:	cb 01       	movw	r24, r22
    1018:	9e 01       	movw	r18, r28
    101a:	2f 53       	subi	r18, 0x3F	; 63
    101c:	3f 4f       	sbci	r19, 0xFF	; 255
    101e:	b9 01       	movw	r22, r18
    1020:	4a e0       	ldi	r20, 0x0A	; 10
    1022:	50 e0       	ldi	r21, 0x00	; 0
    1024:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWHOU);
    1028:	ce 01       	movw	r24, r28
    102a:	8f 53       	subi	r24, 0x3F	; 63
    102c:	9f 4f       	sbci	r25, 0xFF	; 255
    102e:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            itoa(HOU%10,SHOWHOU,10);
    1032:	80 91 88 00 	lds	r24, 0x0088
    1036:	90 91 89 00 	lds	r25, 0x0089
    103a:	2a e0       	ldi	r18, 0x0A	; 10
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	b9 01       	movw	r22, r18
    1040:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    1044:	9e 01       	movw	r18, r28
    1046:	2f 53       	subi	r18, 0x3F	; 63
    1048:	3f 4f       	sbci	r19, 0xFF	; 255
    104a:	b9 01       	movw	r22, r18
    104c:	4a e0       	ldi	r20, 0x0A	; 10
    104e:	50 e0       	ldi	r21, 0x00	; 0
    1050:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWHOU);
    1054:	ce 01       	movw	r24, r28
    1056:	8f 53       	subi	r24, 0x3F	; 63
    1058:	9f 4f       	sbci	r25, 0xFF	; 255
    105a:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_string (":");
    105e:	80 e6       	ldi	r24, 0x60	; 96
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 3);
    1066:	83 e8       	ldi	r24, 0x83	; 131
    1068:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>


            itoa(MIN/10,SHOWMIN,10);
    106c:	80 91 86 00 	lds	r24, 0x0086
    1070:	90 91 87 00 	lds	r25, 0x0087
    1074:	2a e0       	ldi	r18, 0x0A	; 10
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	b9 01       	movw	r22, r18
    107a:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    107e:	cb 01       	movw	r24, r22
    1080:	9e 01       	movw	r18, r28
    1082:	21 54       	subi	r18, 0x41	; 65
    1084:	3f 4f       	sbci	r19, 0xFF	; 255
    1086:	b9 01       	movw	r22, r18
    1088:	4a e0       	ldi	r20, 0x0A	; 10
    108a:	50 e0       	ldi	r21, 0x00	; 0
    108c:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWMIN);
    1090:	ce 01       	movw	r24, r28
    1092:	81 54       	subi	r24, 0x41	; 65
    1094:	9f 4f       	sbci	r25, 0xFF	; 255
    1096:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            itoa(MIN%10,SHOWMIN,10);
    109a:	80 91 86 00 	lds	r24, 0x0086
    109e:	90 91 87 00 	lds	r25, 0x0087
    10a2:	2a e0       	ldi	r18, 0x0A	; 10
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	b9 01       	movw	r22, r18
    10a8:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    10ac:	9e 01       	movw	r18, r28
    10ae:	21 54       	subi	r18, 0x41	; 65
    10b0:	3f 4f       	sbci	r19, 0xFF	; 255
    10b2:	b9 01       	movw	r22, r18
    10b4:	4a e0       	ldi	r20, 0x0A	; 10
    10b6:	50 e0       	ldi	r21, 0x00	; 0
    10b8:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWMIN);
    10bc:	ce 01       	movw	r24, r28
    10be:	81 54       	subi	r24, 0x41	; 65
    10c0:	9f 4f       	sbci	r25, 0xFF	; 255
    10c2:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 5);
    10c6:	85 e8       	ldi	r24, 0x85	; 133
    10c8:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>

            send_a_string (":");
    10cc:	80 e6       	ldi	r24, 0x60	; 96
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 6);
    10d4:	86 e8       	ldi	r24, 0x86	; 134
    10d6:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>



            itoa(SEC/10,SHOWSEC,10);
    10da:	80 91 84 00 	lds	r24, 0x0084
    10de:	90 91 85 00 	lds	r25, 0x0085
    10e2:	2a e0       	ldi	r18, 0x0A	; 10
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	b9 01       	movw	r22, r18
    10e8:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    10ec:	cb 01       	movw	r24, r22
    10ee:	9e 01       	movw	r18, r28
    10f0:	23 54       	subi	r18, 0x43	; 67
    10f2:	3f 4f       	sbci	r19, 0xFF	; 255
    10f4:	b9 01       	movw	r22, r18
    10f6:	4a e0       	ldi	r20, 0x0A	; 10
    10f8:	50 e0       	ldi	r21, 0x00	; 0
    10fa:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWSEC);
    10fe:	ce 01       	movw	r24, r28
    1100:	83 54       	subi	r24, 0x43	; 67
    1102:	9f 4f       	sbci	r25, 0xFF	; 255
    1104:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            itoa(SEC%10,SHOWSEC,10);
    1108:	80 91 84 00 	lds	r24, 0x0084
    110c:	90 91 85 00 	lds	r25, 0x0085
    1110:	2a e0       	ldi	r18, 0x0A	; 10
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	b9 01       	movw	r22, r18
    1116:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    111a:	9e 01       	movw	r18, r28
    111c:	23 54       	subi	r18, 0x43	; 67
    111e:	3f 4f       	sbci	r19, 0xFF	; 255
    1120:	b9 01       	movw	r22, r18
    1122:	4a e0       	ldi	r20, 0x0A	; 10
    1124:	50 e0       	ldi	r21, 0x00	; 0
    1126:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWSEC);
    112a:	ce 01       	movw	r24, r28
    112c:	83 54       	subi	r24, 0x43	; 67
    112e:	9f 4f       	sbci	r25, 0xFF	; 255
    1130:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>



            if (bit_is_set(PINA,5))
    1134:	e9 e3       	ldi	r30, 0x39	; 57
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	80 81       	ld	r24, Z
    113a:	88 2f       	mov	r24, r24
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	80 72       	andi	r24, 0x20	; 32
    1140:	90 70       	andi	r25, 0x00	; 0
    1142:	00 97       	sbiw	r24, 0x00	; 0
    1144:	09 f4       	brne	.+2      	; 0x1148 <main+0x602>
    1146:	76 c0       	rjmp	.+236    	; 0x1234 <main+0x6ee>

            {

                send_a_string(" ALM:ON ");
    1148:	82 e6       	ldi	r24, 0x62	; 98
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

                if ((ALHOU==HOU)&(ALMIN==MIN)&(ALSEC==SEC))
    1150:	20 91 88 00 	lds	r18, 0x0088
    1154:	30 91 89 00 	lds	r19, 0x0089
    1158:	c2 53       	subi	r28, 0x32	; 50
    115a:	df 4f       	sbci	r29, 0xFF	; 255
    115c:	18 82       	st	Y, r1
    115e:	ce 5c       	subi	r28, 0xCE	; 206
    1160:	d0 40       	sbci	r29, 0x00	; 0
    1162:	fe 01       	movw	r30, r28
    1164:	e9 54       	subi	r30, 0x49	; 73
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	80 81       	ld	r24, Z
    116a:	91 81       	ldd	r25, Z+1	; 0x01
    116c:	82 17       	cp	r24, r18
    116e:	93 07       	cpc	r25, r19
    1170:	31 f4       	brne	.+12     	; 0x117e <main+0x638>
    1172:	f1 e0       	ldi	r31, 0x01	; 1
    1174:	c2 53       	subi	r28, 0x32	; 50
    1176:	df 4f       	sbci	r29, 0xFF	; 255
    1178:	f8 83       	st	Y, r31
    117a:	ce 5c       	subi	r28, 0xCE	; 206
    117c:	d0 40       	sbci	r29, 0x00	; 0
    117e:	80 91 86 00 	lds	r24, 0x0086
    1182:	90 91 87 00 	lds	r25, 0x0087
    1186:	c3 53       	subi	r28, 0x33	; 51
    1188:	df 4f       	sbci	r29, 0xFF	; 255
    118a:	18 82       	st	Y, r1
    118c:	cd 5c       	subi	r28, 0xCD	; 205
    118e:	d0 40       	sbci	r29, 0x00	; 0
    1190:	fe 01       	movw	r30, r28
    1192:	e7 54       	subi	r30, 0x47	; 71
    1194:	ff 4f       	sbci	r31, 0xFF	; 255
    1196:	20 81       	ld	r18, Z
    1198:	31 81       	ldd	r19, Z+1	; 0x01
    119a:	28 17       	cp	r18, r24
    119c:	39 07       	cpc	r19, r25
    119e:	31 f4       	brne	.+12     	; 0x11ac <main+0x666>
    11a0:	21 e0       	ldi	r18, 0x01	; 1
    11a2:	c3 53       	subi	r28, 0x33	; 51
    11a4:	df 4f       	sbci	r29, 0xFF	; 255
    11a6:	28 83       	st	Y, r18
    11a8:	cd 5c       	subi	r28, 0xCD	; 205
    11aa:	d0 40       	sbci	r29, 0x00	; 0
    11ac:	c2 53       	subi	r28, 0x32	; 50
    11ae:	df 4f       	sbci	r29, 0xFF	; 255
    11b0:	88 81       	ld	r24, Y
    11b2:	ce 5c       	subi	r28, 0xCE	; 206
    11b4:	d0 40       	sbci	r29, 0x00	; 0
    11b6:	c3 53       	subi	r28, 0x33	; 51
    11b8:	df 4f       	sbci	r29, 0xFF	; 255
    11ba:	38 81       	ld	r19, Y
    11bc:	cd 5c       	subi	r28, 0xCD	; 205
    11be:	d0 40       	sbci	r29, 0x00	; 0
    11c0:	83 23       	and	r24, r19
    11c2:	e8 2f       	mov	r30, r24
    11c4:	f0 e0       	ldi	r31, 0x00	; 0
    11c6:	c5 53       	subi	r28, 0x35	; 53
    11c8:	df 4f       	sbci	r29, 0xFF	; 255
    11ca:	f9 83       	std	Y+1, r31	; 0x01
    11cc:	e8 83       	st	Y, r30
    11ce:	cb 5c       	subi	r28, 0xCB	; 203
    11d0:	d0 40       	sbci	r29, 0x00	; 0
    11d2:	20 91 84 00 	lds	r18, 0x0084
    11d6:	30 91 85 00 	lds	r19, 0x0085
    11da:	c7 53       	subi	r28, 0x37	; 55
    11dc:	df 4f       	sbci	r29, 0xFF	; 255
    11de:	19 82       	std	Y+1, r1	; 0x01
    11e0:	18 82       	st	Y, r1
    11e2:	c9 5c       	subi	r28, 0xC9	; 201
    11e4:	d0 40       	sbci	r29, 0x00	; 0
    11e6:	fe 01       	movw	r30, r28
    11e8:	e5 54       	subi	r30, 0x45	; 69
    11ea:	ff 4f       	sbci	r31, 0xFF	; 255
    11ec:	80 81       	ld	r24, Z
    11ee:	91 81       	ldd	r25, Z+1	; 0x01
    11f0:	82 17       	cp	r24, r18
    11f2:	93 07       	cpc	r25, r19
    11f4:	41 f4       	brne	.+16     	; 0x1206 <main+0x6c0>
    11f6:	21 e0       	ldi	r18, 0x01	; 1
    11f8:	30 e0       	ldi	r19, 0x00	; 0
    11fa:	c7 53       	subi	r28, 0x37	; 55
    11fc:	df 4f       	sbci	r29, 0xFF	; 255
    11fe:	39 83       	std	Y+1, r19	; 0x01
    1200:	28 83       	st	Y, r18
    1202:	c9 5c       	subi	r28, 0xC9	; 201
    1204:	d0 40       	sbci	r29, 0x00	; 0
    1206:	c5 53       	subi	r28, 0x35	; 53
    1208:	df 4f       	sbci	r29, 0xFF	; 255
    120a:	88 81       	ld	r24, Y
    120c:	99 81       	ldd	r25, Y+1	; 0x01
    120e:	cb 5c       	subi	r28, 0xCB	; 203
    1210:	d0 40       	sbci	r29, 0x00	; 0
    1212:	c7 53       	subi	r28, 0x37	; 55
    1214:	df 4f       	sbci	r29, 0xFF	; 255
    1216:	e8 81       	ld	r30, Y
    1218:	f9 81       	ldd	r31, Y+1	; 0x01
    121a:	c9 5c       	subi	r28, 0xC9	; 201
    121c:	d0 40       	sbci	r29, 0x00	; 0
    121e:	8e 23       	and	r24, r30
    1220:	9f 23       	and	r25, r31
    1222:	00 97       	sbiw	r24, 0x00	; 0
    1224:	39 f0       	breq	.+14     	; 0x1234 <main+0x6ee>

                {

                        PORTA|=(1<<PINC7);
    1226:	ab e3       	ldi	r26, 0x3B	; 59
    1228:	b0 e0       	ldi	r27, 0x00	; 0
    122a:	eb e3       	ldi	r30, 0x3B	; 59
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	80 81       	ld	r24, Z
    1230:	80 68       	ori	r24, 0x80	; 128
    1232:	8c 93       	st	X, r24

                }

            }

            if (bit_is_clear(PINA,5))
    1234:	e9 e3       	ldi	r30, 0x39	; 57
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	80 81       	ld	r24, Z
    123a:	88 2f       	mov	r24, r24
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	80 72       	andi	r24, 0x20	; 32
    1240:	90 70       	andi	r25, 0x00	; 0
    1242:	00 97       	sbiw	r24, 0x00	; 0
    1244:	59 f4       	brne	.+22     	; 0x125c <main+0x716>

            {

                send_a_string(" ALM:OFF");
    1246:	8b e6       	ldi	r24, 0x6B	; 107
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

                PORTA&=~(1<<PINC7);
    124e:	ab e3       	ldi	r26, 0x3B	; 59
    1250:	b0 e0       	ldi	r27, 0x00	; 0
    1252:	eb e3       	ldi	r30, 0x3B	; 59
    1254:	f0 e0       	ldi	r31, 0x00	; 0
    1256:	80 81       	ld	r24, Z
    1258:	8f 77       	andi	r24, 0x7F	; 127
    125a:	8c 93       	st	X, r24

            }

            send_a_command(0x80 + 0x40 + 0);
    125c:	80 ec       	ldi	r24, 0xC0	; 192
    125e:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>



            send_a_string ("ALARM:");
    1262:	84 e7       	ldi	r24, 0x74	; 116
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 0x40 + 7);
    126a:	87 ec       	ldi	r24, 0xC7	; 199
    126c:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>



            itoa(ALHOU/10,SHOWALHOU,10);
    1270:	fe 01       	movw	r30, r28
    1272:	e9 54       	subi	r30, 0x49	; 73
    1274:	ff 4f       	sbci	r31, 0xFF	; 255
    1276:	80 81       	ld	r24, Z
    1278:	91 81       	ldd	r25, Z+1	; 0x01
    127a:	2a e0       	ldi	r18, 0x0A	; 10
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	b9 01       	movw	r22, r18
    1280:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    1284:	cb 01       	movw	r24, r22
    1286:	9e 01       	movw	r18, r28
    1288:	29 53       	subi	r18, 0x39	; 57
    128a:	3f 4f       	sbci	r19, 0xFF	; 255
    128c:	b9 01       	movw	r22, r18
    128e:	4a e0       	ldi	r20, 0x0A	; 10
    1290:	50 e0       	ldi	r21, 0x00	; 0
    1292:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWALHOU);
    1296:	ce 01       	movw	r24, r28
    1298:	89 53       	subi	r24, 0x39	; 57
    129a:	9f 4f       	sbci	r25, 0xFF	; 255
    129c:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            itoa(ALHOU%10,SHOWALHOU,10);
    12a0:	fe 01       	movw	r30, r28
    12a2:	e9 54       	subi	r30, 0x49	; 73
    12a4:	ff 4f       	sbci	r31, 0xFF	; 255
    12a6:	80 81       	ld	r24, Z
    12a8:	91 81       	ldd	r25, Z+1	; 0x01
    12aa:	2a e0       	ldi	r18, 0x0A	; 10
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	b9 01       	movw	r22, r18
    12b0:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    12b4:	9e 01       	movw	r18, r28
    12b6:	29 53       	subi	r18, 0x39	; 57
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	b9 01       	movw	r22, r18
    12bc:	4a e0       	ldi	r20, 0x0A	; 10
    12be:	50 e0       	ldi	r21, 0x00	; 0
    12c0:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWALHOU);
    12c4:	ce 01       	movw	r24, r28
    12c6:	89 53       	subi	r24, 0x39	; 57
    12c8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ca:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 0x40 +9);
    12ce:	89 ec       	ldi	r24, 0xC9	; 201
    12d0:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>

            send_a_string (":");
    12d4:	80 e6       	ldi	r24, 0x60	; 96
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 0x40 +10);
    12dc:	8a ec       	ldi	r24, 0xCA	; 202
    12de:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>


            itoa(ALMIN/10,SHOWALMIN,10);
    12e2:	fe 01       	movw	r30, r28
    12e4:	e7 54       	subi	r30, 0x47	; 71
    12e6:	ff 4f       	sbci	r31, 0xFF	; 255
    12e8:	80 81       	ld	r24, Z
    12ea:	91 81       	ldd	r25, Z+1	; 0x01
    12ec:	2a e0       	ldi	r18, 0x0A	; 10
    12ee:	30 e0       	ldi	r19, 0x00	; 0
    12f0:	b9 01       	movw	r22, r18
    12f2:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    12f6:	cb 01       	movw	r24, r22
    12f8:	9e 01       	movw	r18, r28
    12fa:	2b 53       	subi	r18, 0x3B	; 59
    12fc:	3f 4f       	sbci	r19, 0xFF	; 255
    12fe:	b9 01       	movw	r22, r18
    1300:	4a e0       	ldi	r20, 0x0A	; 10
    1302:	50 e0       	ldi	r21, 0x00	; 0
    1304:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWALMIN);
    1308:	ce 01       	movw	r24, r28
    130a:	8b 53       	subi	r24, 0x3B	; 59
    130c:	9f 4f       	sbci	r25, 0xFF	; 255
    130e:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            itoa(ALMIN%10,SHOWALMIN,10);
    1312:	fe 01       	movw	r30, r28
    1314:	e7 54       	subi	r30, 0x47	; 71
    1316:	ff 4f       	sbci	r31, 0xFF	; 255
    1318:	80 81       	ld	r24, Z
    131a:	91 81       	ldd	r25, Z+1	; 0x01
    131c:	2a e0       	ldi	r18, 0x0A	; 10
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	b9 01       	movw	r22, r18
    1322:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    1326:	9e 01       	movw	r18, r28
    1328:	2b 53       	subi	r18, 0x3B	; 59
    132a:	3f 4f       	sbci	r19, 0xFF	; 255
    132c:	b9 01       	movw	r22, r18
    132e:	4a e0       	ldi	r20, 0x0A	; 10
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWALMIN);
    1336:	ce 01       	movw	r24, r28
    1338:	8b 53       	subi	r24, 0x3B	; 59
    133a:	9f 4f       	sbci	r25, 0xFF	; 255
    133c:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 0x40+ 12);
    1340:	8c ec       	ldi	r24, 0xCC	; 204
    1342:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>

            send_a_string (":");
    1346:	80 e6       	ldi	r24, 0x60	; 96
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 0x40+ 13);
    134e:	8d ec       	ldi	r24, 0xCD	; 205
    1350:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>



            itoa(ALSEC/10,SHOWALSEC,10);
    1354:	fe 01       	movw	r30, r28
    1356:	e5 54       	subi	r30, 0x45	; 69
    1358:	ff 4f       	sbci	r31, 0xFF	; 255
    135a:	80 81       	ld	r24, Z
    135c:	91 81       	ldd	r25, Z+1	; 0x01
    135e:	2a e0       	ldi	r18, 0x0A	; 10
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	b9 01       	movw	r22, r18
    1364:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    1368:	cb 01       	movw	r24, r22
    136a:	9e 01       	movw	r18, r28
    136c:	2d 53       	subi	r18, 0x3D	; 61
    136e:	3f 4f       	sbci	r19, 0xFF	; 255
    1370:	b9 01       	movw	r22, r18
    1372:	4a e0       	ldi	r20, 0x0A	; 10
    1374:	50 e0       	ldi	r21, 0x00	; 0
    1376:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWALSEC);
    137a:	ce 01       	movw	r24, r28
    137c:	8d 53       	subi	r24, 0x3D	; 61
    137e:	9f 4f       	sbci	r25, 0xFF	; 255
    1380:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            itoa(ALSEC%10,SHOWALSEC,10);
    1384:	fe 01       	movw	r30, r28
    1386:	e5 54       	subi	r30, 0x45	; 69
    1388:	ff 4f       	sbci	r31, 0xFF	; 255
    138a:	80 81       	ld	r24, Z
    138c:	91 81       	ldd	r25, Z+1	; 0x01
    138e:	2a e0       	ldi	r18, 0x0A	; 10
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	b9 01       	movw	r22, r18
    1394:	0e 94 c5 12 	call	0x258a	; 0x258a <__divmodhi4>
    1398:	9e 01       	movw	r18, r28
    139a:	2d 53       	subi	r18, 0x3D	; 61
    139c:	3f 4f       	sbci	r19, 0xFF	; 255
    139e:	b9 01       	movw	r22, r18
    13a0:	4a e0       	ldi	r20, 0x0A	; 10
    13a2:	50 e0       	ldi	r21, 0x00	; 0
    13a4:	0e 94 23 13 	call	0x2646	; 0x2646 <itoa>

            send_a_string(SHOWALSEC);
    13a8:	ce 01       	movw	r24, r28
    13aa:	8d 53       	subi	r24, 0x3D	; 61
    13ac:	9f 4f       	sbci	r25, 0xFF	; 255
    13ae:	0e 94 a8 12 	call	0x2550	; 0x2550 <send_a_string>

            send_a_command(0x80 + 0);
    13b2:	80 e8       	ldi	r24, 0x80	; 128
    13b4:	0e 94 62 11 	call	0x22c4	; 0x22c4 <send_a_command>


        if (bit_is_set(PINA,4))
    13b8:	e9 e3       	ldi	r30, 0x39	; 57
    13ba:	f0 e0       	ldi	r31, 0x00	; 0
    13bc:	80 81       	ld	r24, Z
    13be:	88 2f       	mov	r24, r24
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	80 71       	andi	r24, 0x10	; 16
    13c4:	90 70       	andi	r25, 0x00	; 0
    13c6:	00 97       	sbiw	r24, 0x00	; 0
    13c8:	09 f4       	brne	.+2      	; 0x13cc <main+0x886>
    13ca:	16 c4       	rjmp	.+2092   	; 0x1bf8 <main+0x10b2>

        {

            if (bit_is_clear(PINA,0))
    13cc:	e9 e3       	ldi	r30, 0x39	; 57
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	80 81       	ld	r24, Z
    13d2:	88 2f       	mov	r24, r24
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	81 70       	andi	r24, 0x01	; 1
    13d8:	90 70       	andi	r25, 0x00	; 0
    13da:	00 97       	sbiw	r24, 0x00	; 0
    13dc:	09 f0       	breq	.+2      	; 0x13e0 <main+0x89a>
    13de:	95 c1       	rjmp	.+810    	; 0x170a <main+0xbc4>

            {

                if (MIN<60)
    13e0:	80 91 86 00 	lds	r24, 0x0086
    13e4:	90 91 87 00 	lds	r25, 0x0087
    13e8:	8c 33       	cpi	r24, 0x3C	; 60
    13ea:	91 05       	cpc	r25, r1
    13ec:	0c f0       	brlt	.+2      	; 0x13f0 <main+0x8aa>
    13ee:	bd c0       	rjmp	.+378    	; 0x156a <main+0xa24>

                {

                    MIN++;
    13f0:	80 91 86 00 	lds	r24, 0x0086
    13f4:	90 91 87 00 	lds	r25, 0x0087
    13f8:	01 96       	adiw	r24, 0x01	; 1
    13fa:	90 93 87 00 	sts	0x0087, r25
    13fe:	80 93 86 00 	sts	0x0086, r24
    1402:	fe 01       	movw	r30, r28
    1404:	e7 57       	subi	r30, 0x77	; 119
    1406:	ff 4f       	sbci	r31, 0xFF	; 255
    1408:	80 e0       	ldi	r24, 0x00	; 0
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	ac e5       	ldi	r26, 0x5C	; 92
    140e:	b3 e4       	ldi	r27, 0x43	; 67
    1410:	80 83       	st	Z, r24
    1412:	91 83       	std	Z+1, r25	; 0x01
    1414:	a2 83       	std	Z+2, r26	; 0x02
    1416:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1418:	8e 01       	movw	r16, r28
    141a:	0b 57       	subi	r16, 0x7B	; 123
    141c:	1f 4f       	sbci	r17, 0xFF	; 255
    141e:	fe 01       	movw	r30, r28
    1420:	e7 57       	subi	r30, 0x77	; 119
    1422:	ff 4f       	sbci	r31, 0xFF	; 255
    1424:	60 81       	ld	r22, Z
    1426:	71 81       	ldd	r23, Z+1	; 0x01
    1428:	82 81       	ldd	r24, Z+2	; 0x02
    142a:	93 81       	ldd	r25, Z+3	; 0x03
    142c:	20 e0       	ldi	r18, 0x00	; 0
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	4a ef       	ldi	r20, 0xFA	; 250
    1432:	54 e4       	ldi	r21, 0x44	; 68
    1434:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1438:	dc 01       	movw	r26, r24
    143a:	cb 01       	movw	r24, r22
    143c:	f8 01       	movw	r30, r16
    143e:	80 83       	st	Z, r24
    1440:	91 83       	std	Z+1, r25	; 0x01
    1442:	a2 83       	std	Z+2, r26	; 0x02
    1444:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1446:	fe 01       	movw	r30, r28
    1448:	eb 57       	subi	r30, 0x7B	; 123
    144a:	ff 4f       	sbci	r31, 0xFF	; 255
    144c:	60 81       	ld	r22, Z
    144e:	71 81       	ldd	r23, Z+1	; 0x01
    1450:	82 81       	ldd	r24, Z+2	; 0x02
    1452:	93 81       	ldd	r25, Z+3	; 0x03
    1454:	20 e0       	ldi	r18, 0x00	; 0
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	40 e8       	ldi	r20, 0x80	; 128
    145a:	5f e3       	ldi	r21, 0x3F	; 63
    145c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1460:	88 23       	and	r24, r24
    1462:	44 f4       	brge	.+16     	; 0x1474 <main+0x92e>
		__ticks = 1;
    1464:	fe 01       	movw	r30, r28
    1466:	ed 57       	subi	r30, 0x7D	; 125
    1468:	ff 4f       	sbci	r31, 0xFF	; 255
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	91 83       	std	Z+1, r25	; 0x01
    1470:	80 83       	st	Z, r24
    1472:	64 c0       	rjmp	.+200    	; 0x153c <main+0x9f6>
	else if (__tmp > 65535)
    1474:	fe 01       	movw	r30, r28
    1476:	eb 57       	subi	r30, 0x7B	; 123
    1478:	ff 4f       	sbci	r31, 0xFF	; 255
    147a:	60 81       	ld	r22, Z
    147c:	71 81       	ldd	r23, Z+1	; 0x01
    147e:	82 81       	ldd	r24, Z+2	; 0x02
    1480:	93 81       	ldd	r25, Z+3	; 0x03
    1482:	20 e0       	ldi	r18, 0x00	; 0
    1484:	3f ef       	ldi	r19, 0xFF	; 255
    1486:	4f e7       	ldi	r20, 0x7F	; 127
    1488:	57 e4       	ldi	r21, 0x47	; 71
    148a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    148e:	18 16       	cp	r1, r24
    1490:	0c f0       	brlt	.+2      	; 0x1494 <main+0x94e>
    1492:	43 c0       	rjmp	.+134    	; 0x151a <main+0x9d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1494:	fe 01       	movw	r30, r28
    1496:	e7 57       	subi	r30, 0x77	; 119
    1498:	ff 4f       	sbci	r31, 0xFF	; 255
    149a:	60 81       	ld	r22, Z
    149c:	71 81       	ldd	r23, Z+1	; 0x01
    149e:	82 81       	ldd	r24, Z+2	; 0x02
    14a0:	93 81       	ldd	r25, Z+3	; 0x03
    14a2:	20 e0       	ldi	r18, 0x00	; 0
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	40 e2       	ldi	r20, 0x20	; 32
    14a8:	51 e4       	ldi	r21, 0x41	; 65
    14aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14ae:	dc 01       	movw	r26, r24
    14b0:	cb 01       	movw	r24, r22
    14b2:	8e 01       	movw	r16, r28
    14b4:	0d 57       	subi	r16, 0x7D	; 125
    14b6:	1f 4f       	sbci	r17, 0xFF	; 255
    14b8:	bc 01       	movw	r22, r24
    14ba:	cd 01       	movw	r24, r26
    14bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14c0:	dc 01       	movw	r26, r24
    14c2:	cb 01       	movw	r24, r22
    14c4:	f8 01       	movw	r30, r16
    14c6:	91 83       	std	Z+1, r25	; 0x01
    14c8:	80 83       	st	Z, r24
    14ca:	1f c0       	rjmp	.+62     	; 0x150a <main+0x9c4>
    14cc:	fe 01       	movw	r30, r28
    14ce:	ef 57       	subi	r30, 0x7F	; 127
    14d0:	ff 4f       	sbci	r31, 0xFF	; 255
    14d2:	88 ec       	ldi	r24, 0xC8	; 200
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	91 83       	std	Z+1, r25	; 0x01
    14d8:	80 83       	st	Z, r24
    14da:	fe 01       	movw	r30, r28
    14dc:	ef 57       	subi	r30, 0x7F	; 127
    14de:	ff 4f       	sbci	r31, 0xFF	; 255
    14e0:	80 81       	ld	r24, Z
    14e2:	91 81       	ldd	r25, Z+1	; 0x01
    14e4:	01 97       	sbiw	r24, 0x01	; 1
    14e6:	f1 f7       	brne	.-4      	; 0x14e4 <main+0x99e>
    14e8:	fe 01       	movw	r30, r28
    14ea:	ef 57       	subi	r30, 0x7F	; 127
    14ec:	ff 4f       	sbci	r31, 0xFF	; 255
    14ee:	91 83       	std	Z+1, r25	; 0x01
    14f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14f2:	de 01       	movw	r26, r28
    14f4:	ad 57       	subi	r26, 0x7D	; 125
    14f6:	bf 4f       	sbci	r27, 0xFF	; 255
    14f8:	fe 01       	movw	r30, r28
    14fa:	ed 57       	subi	r30, 0x7D	; 125
    14fc:	ff 4f       	sbci	r31, 0xFF	; 255
    14fe:	80 81       	ld	r24, Z
    1500:	91 81       	ldd	r25, Z+1	; 0x01
    1502:	01 97       	sbiw	r24, 0x01	; 1
    1504:	11 96       	adiw	r26, 0x01	; 1
    1506:	9c 93       	st	X, r25
    1508:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    150a:	fe 01       	movw	r30, r28
    150c:	ed 57       	subi	r30, 0x7D	; 125
    150e:	ff 4f       	sbci	r31, 0xFF	; 255
    1510:	80 81       	ld	r24, Z
    1512:	91 81       	ldd	r25, Z+1	; 0x01
    1514:	00 97       	sbiw	r24, 0x00	; 0
    1516:	d1 f6       	brne	.-76     	; 0x14cc <main+0x986>
    1518:	28 c0       	rjmp	.+80     	; 0x156a <main+0xa24>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    151a:	8e 01       	movw	r16, r28
    151c:	0d 57       	subi	r16, 0x7D	; 125
    151e:	1f 4f       	sbci	r17, 0xFF	; 255
    1520:	fe 01       	movw	r30, r28
    1522:	eb 57       	subi	r30, 0x7B	; 123
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	60 81       	ld	r22, Z
    1528:	71 81       	ldd	r23, Z+1	; 0x01
    152a:	82 81       	ldd	r24, Z+2	; 0x02
    152c:	93 81       	ldd	r25, Z+3	; 0x03
    152e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1532:	dc 01       	movw	r26, r24
    1534:	cb 01       	movw	r24, r22
    1536:	f8 01       	movw	r30, r16
    1538:	91 83       	std	Z+1, r25	; 0x01
    153a:	80 83       	st	Z, r24
    153c:	de 01       	movw	r26, r28
    153e:	a1 58       	subi	r26, 0x81	; 129
    1540:	bf 4f       	sbci	r27, 0xFF	; 255
    1542:	fe 01       	movw	r30, r28
    1544:	ed 57       	subi	r30, 0x7D	; 125
    1546:	ff 4f       	sbci	r31, 0xFF	; 255
    1548:	80 81       	ld	r24, Z
    154a:	91 81       	ldd	r25, Z+1	; 0x01
    154c:	11 96       	adiw	r26, 0x01	; 1
    154e:	9c 93       	st	X, r25
    1550:	8e 93       	st	-X, r24
    1552:	fe 01       	movw	r30, r28
    1554:	e1 58       	subi	r30, 0x81	; 129
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	80 81       	ld	r24, Z
    155a:	91 81       	ldd	r25, Z+1	; 0x01
    155c:	01 97       	sbiw	r24, 0x01	; 1
    155e:	f1 f7       	brne	.-4      	; 0x155c <main+0xa16>
    1560:	fe 01       	movw	r30, r28
    1562:	e1 58       	subi	r30, 0x81	; 129
    1564:	ff 4f       	sbci	r31, 0xFF	; 255
    1566:	91 83       	std	Z+1, r25	; 0x01
    1568:	80 83       	st	Z, r24

                    _delay_ms(220);

                }

                if (MIN==60)
    156a:	80 91 86 00 	lds	r24, 0x0086
    156e:	90 91 87 00 	lds	r25, 0x0087
    1572:	8c 33       	cpi	r24, 0x3C	; 60
    1574:	91 05       	cpc	r25, r1
    1576:	09 f0       	breq	.+2      	; 0x157a <main+0xa34>
    1578:	c8 c0       	rjmp	.+400    	; 0x170a <main+0xbc4>

                {

                    if (HOU<24)
    157a:	80 91 88 00 	lds	r24, 0x0088
    157e:	90 91 89 00 	lds	r25, 0x0089
    1582:	88 31       	cpi	r24, 0x18	; 24
    1584:	91 05       	cpc	r25, r1
    1586:	4c f4       	brge	.+18     	; 0x159a <main+0xa54>

                    {

                        HOU++;
    1588:	80 91 88 00 	lds	r24, 0x0088
    158c:	90 91 89 00 	lds	r25, 0x0089
    1590:	01 96       	adiw	r24, 0x01	; 1
    1592:	90 93 89 00 	sts	0x0089, r25
    1596:	80 93 88 00 	sts	0x0088, r24

                    }

                    MIN=0;
    159a:	10 92 87 00 	sts	0x0087, r1
    159e:	10 92 86 00 	sts	0x0086, r1
    15a2:	fe 01       	movw	r30, r28
    15a4:	e5 58       	subi	r30, 0x85	; 133
    15a6:	ff 4f       	sbci	r31, 0xFF	; 255
    15a8:	80 e0       	ldi	r24, 0x00	; 0
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	ac e5       	ldi	r26, 0x5C	; 92
    15ae:	b3 e4       	ldi	r27, 0x43	; 67
    15b0:	80 83       	st	Z, r24
    15b2:	91 83       	std	Z+1, r25	; 0x01
    15b4:	a2 83       	std	Z+2, r26	; 0x02
    15b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15b8:	8e 01       	movw	r16, r28
    15ba:	09 58       	subi	r16, 0x89	; 137
    15bc:	1f 4f       	sbci	r17, 0xFF	; 255
    15be:	fe 01       	movw	r30, r28
    15c0:	e5 58       	subi	r30, 0x85	; 133
    15c2:	ff 4f       	sbci	r31, 0xFF	; 255
    15c4:	60 81       	ld	r22, Z
    15c6:	71 81       	ldd	r23, Z+1	; 0x01
    15c8:	82 81       	ldd	r24, Z+2	; 0x02
    15ca:	93 81       	ldd	r25, Z+3	; 0x03
    15cc:	20 e0       	ldi	r18, 0x00	; 0
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	4a ef       	ldi	r20, 0xFA	; 250
    15d2:	54 e4       	ldi	r21, 0x44	; 68
    15d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15d8:	dc 01       	movw	r26, r24
    15da:	cb 01       	movw	r24, r22
    15dc:	f8 01       	movw	r30, r16
    15de:	80 83       	st	Z, r24
    15e0:	91 83       	std	Z+1, r25	; 0x01
    15e2:	a2 83       	std	Z+2, r26	; 0x02
    15e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15e6:	fe 01       	movw	r30, r28
    15e8:	e9 58       	subi	r30, 0x89	; 137
    15ea:	ff 4f       	sbci	r31, 0xFF	; 255
    15ec:	60 81       	ld	r22, Z
    15ee:	71 81       	ldd	r23, Z+1	; 0x01
    15f0:	82 81       	ldd	r24, Z+2	; 0x02
    15f2:	93 81       	ldd	r25, Z+3	; 0x03
    15f4:	20 e0       	ldi	r18, 0x00	; 0
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	40 e8       	ldi	r20, 0x80	; 128
    15fa:	5f e3       	ldi	r21, 0x3F	; 63
    15fc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1600:	88 23       	and	r24, r24
    1602:	44 f4       	brge	.+16     	; 0x1614 <main+0xace>
		__ticks = 1;
    1604:	fe 01       	movw	r30, r28
    1606:	eb 58       	subi	r30, 0x8B	; 139
    1608:	ff 4f       	sbci	r31, 0xFF	; 255
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	91 83       	std	Z+1, r25	; 0x01
    1610:	80 83       	st	Z, r24
    1612:	64 c0       	rjmp	.+200    	; 0x16dc <main+0xb96>
	else if (__tmp > 65535)
    1614:	fe 01       	movw	r30, r28
    1616:	e9 58       	subi	r30, 0x89	; 137
    1618:	ff 4f       	sbci	r31, 0xFF	; 255
    161a:	60 81       	ld	r22, Z
    161c:	71 81       	ldd	r23, Z+1	; 0x01
    161e:	82 81       	ldd	r24, Z+2	; 0x02
    1620:	93 81       	ldd	r25, Z+3	; 0x03
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	3f ef       	ldi	r19, 0xFF	; 255
    1626:	4f e7       	ldi	r20, 0x7F	; 127
    1628:	57 e4       	ldi	r21, 0x47	; 71
    162a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    162e:	18 16       	cp	r1, r24
    1630:	0c f0       	brlt	.+2      	; 0x1634 <main+0xaee>
    1632:	43 c0       	rjmp	.+134    	; 0x16ba <main+0xb74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1634:	fe 01       	movw	r30, r28
    1636:	e5 58       	subi	r30, 0x85	; 133
    1638:	ff 4f       	sbci	r31, 0xFF	; 255
    163a:	60 81       	ld	r22, Z
    163c:	71 81       	ldd	r23, Z+1	; 0x01
    163e:	82 81       	ldd	r24, Z+2	; 0x02
    1640:	93 81       	ldd	r25, Z+3	; 0x03
    1642:	20 e0       	ldi	r18, 0x00	; 0
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	40 e2       	ldi	r20, 0x20	; 32
    1648:	51 e4       	ldi	r21, 0x41	; 65
    164a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    164e:	dc 01       	movw	r26, r24
    1650:	cb 01       	movw	r24, r22
    1652:	8e 01       	movw	r16, r28
    1654:	0b 58       	subi	r16, 0x8B	; 139
    1656:	1f 4f       	sbci	r17, 0xFF	; 255
    1658:	bc 01       	movw	r22, r24
    165a:	cd 01       	movw	r24, r26
    165c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1660:	dc 01       	movw	r26, r24
    1662:	cb 01       	movw	r24, r22
    1664:	f8 01       	movw	r30, r16
    1666:	91 83       	std	Z+1, r25	; 0x01
    1668:	80 83       	st	Z, r24
    166a:	1f c0       	rjmp	.+62     	; 0x16aa <main+0xb64>
    166c:	fe 01       	movw	r30, r28
    166e:	ed 58       	subi	r30, 0x8D	; 141
    1670:	ff 4f       	sbci	r31, 0xFF	; 255
    1672:	88 ec       	ldi	r24, 0xC8	; 200
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	91 83       	std	Z+1, r25	; 0x01
    1678:	80 83       	st	Z, r24
    167a:	fe 01       	movw	r30, r28
    167c:	ed 58       	subi	r30, 0x8D	; 141
    167e:	ff 4f       	sbci	r31, 0xFF	; 255
    1680:	80 81       	ld	r24, Z
    1682:	91 81       	ldd	r25, Z+1	; 0x01
    1684:	01 97       	sbiw	r24, 0x01	; 1
    1686:	f1 f7       	brne	.-4      	; 0x1684 <main+0xb3e>
    1688:	fe 01       	movw	r30, r28
    168a:	ed 58       	subi	r30, 0x8D	; 141
    168c:	ff 4f       	sbci	r31, 0xFF	; 255
    168e:	91 83       	std	Z+1, r25	; 0x01
    1690:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1692:	de 01       	movw	r26, r28
    1694:	ab 58       	subi	r26, 0x8B	; 139
    1696:	bf 4f       	sbci	r27, 0xFF	; 255
    1698:	fe 01       	movw	r30, r28
    169a:	eb 58       	subi	r30, 0x8B	; 139
    169c:	ff 4f       	sbci	r31, 0xFF	; 255
    169e:	80 81       	ld	r24, Z
    16a0:	91 81       	ldd	r25, Z+1	; 0x01
    16a2:	01 97       	sbiw	r24, 0x01	; 1
    16a4:	11 96       	adiw	r26, 0x01	; 1
    16a6:	9c 93       	st	X, r25
    16a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16aa:	fe 01       	movw	r30, r28
    16ac:	eb 58       	subi	r30, 0x8B	; 139
    16ae:	ff 4f       	sbci	r31, 0xFF	; 255
    16b0:	80 81       	ld	r24, Z
    16b2:	91 81       	ldd	r25, Z+1	; 0x01
    16b4:	00 97       	sbiw	r24, 0x00	; 0
    16b6:	d1 f6       	brne	.-76     	; 0x166c <main+0xb26>
    16b8:	28 c0       	rjmp	.+80     	; 0x170a <main+0xbc4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16ba:	8e 01       	movw	r16, r28
    16bc:	0b 58       	subi	r16, 0x8B	; 139
    16be:	1f 4f       	sbci	r17, 0xFF	; 255
    16c0:	fe 01       	movw	r30, r28
    16c2:	e9 58       	subi	r30, 0x89	; 137
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	60 81       	ld	r22, Z
    16c8:	71 81       	ldd	r23, Z+1	; 0x01
    16ca:	82 81       	ldd	r24, Z+2	; 0x02
    16cc:	93 81       	ldd	r25, Z+3	; 0x03
    16ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16d2:	dc 01       	movw	r26, r24
    16d4:	cb 01       	movw	r24, r22
    16d6:	f8 01       	movw	r30, r16
    16d8:	91 83       	std	Z+1, r25	; 0x01
    16da:	80 83       	st	Z, r24
    16dc:	de 01       	movw	r26, r28
    16de:	af 58       	subi	r26, 0x8F	; 143
    16e0:	bf 4f       	sbci	r27, 0xFF	; 255
    16e2:	fe 01       	movw	r30, r28
    16e4:	eb 58       	subi	r30, 0x8B	; 139
    16e6:	ff 4f       	sbci	r31, 0xFF	; 255
    16e8:	80 81       	ld	r24, Z
    16ea:	91 81       	ldd	r25, Z+1	; 0x01
    16ec:	11 96       	adiw	r26, 0x01	; 1
    16ee:	9c 93       	st	X, r25
    16f0:	8e 93       	st	-X, r24
    16f2:	fe 01       	movw	r30, r28
    16f4:	ef 58       	subi	r30, 0x8F	; 143
    16f6:	ff 4f       	sbci	r31, 0xFF	; 255
    16f8:	80 81       	ld	r24, Z
    16fa:	91 81       	ldd	r25, Z+1	; 0x01
    16fc:	01 97       	sbiw	r24, 0x01	; 1
    16fe:	f1 f7       	brne	.-4      	; 0x16fc <main+0xbb6>
    1700:	fe 01       	movw	r30, r28
    1702:	ef 58       	subi	r30, 0x8F	; 143
    1704:	ff 4f       	sbci	r31, 0xFF	; 255
    1706:	91 83       	std	Z+1, r25	; 0x01
    1708:	80 83       	st	Z, r24

                }

            }

            if (bit_is_clear(PINA,1))
    170a:	e9 e3       	ldi	r30, 0x39	; 57
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	80 81       	ld	r24, Z
    1710:	88 2f       	mov	r24, r24
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	82 70       	andi	r24, 0x02	; 2
    1716:	90 70       	andi	r25, 0x00	; 0
    1718:	00 97       	sbiw	r24, 0x00	; 0
    171a:	09 f0       	breq	.+2      	; 0x171e <main+0xbd8>
    171c:	c5 c0       	rjmp	.+394    	; 0x18a8 <main+0xd62>

            {

                if (MIN>0)
    171e:	80 91 86 00 	lds	r24, 0x0086
    1722:	90 91 87 00 	lds	r25, 0x0087
    1726:	18 16       	cp	r1, r24
    1728:	19 06       	cpc	r1, r25
    172a:	0c f0       	brlt	.+2      	; 0x172e <main+0xbe8>
    172c:	bd c0       	rjmp	.+378    	; 0x18a8 <main+0xd62>

                {

                    MIN--;
    172e:	80 91 86 00 	lds	r24, 0x0086
    1732:	90 91 87 00 	lds	r25, 0x0087
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	90 93 87 00 	sts	0x0087, r25
    173c:	80 93 86 00 	sts	0x0086, r24
    1740:	fe 01       	movw	r30, r28
    1742:	e3 59       	subi	r30, 0x93	; 147
    1744:	ff 4f       	sbci	r31, 0xFF	; 255
    1746:	80 e0       	ldi	r24, 0x00	; 0
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	ac e5       	ldi	r26, 0x5C	; 92
    174c:	b3 e4       	ldi	r27, 0x43	; 67
    174e:	80 83       	st	Z, r24
    1750:	91 83       	std	Z+1, r25	; 0x01
    1752:	a2 83       	std	Z+2, r26	; 0x02
    1754:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1756:	8e 01       	movw	r16, r28
    1758:	07 59       	subi	r16, 0x97	; 151
    175a:	1f 4f       	sbci	r17, 0xFF	; 255
    175c:	fe 01       	movw	r30, r28
    175e:	e3 59       	subi	r30, 0x93	; 147
    1760:	ff 4f       	sbci	r31, 0xFF	; 255
    1762:	60 81       	ld	r22, Z
    1764:	71 81       	ldd	r23, Z+1	; 0x01
    1766:	82 81       	ldd	r24, Z+2	; 0x02
    1768:	93 81       	ldd	r25, Z+3	; 0x03
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	4a ef       	ldi	r20, 0xFA	; 250
    1770:	54 e4       	ldi	r21, 0x44	; 68
    1772:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1776:	dc 01       	movw	r26, r24
    1778:	cb 01       	movw	r24, r22
    177a:	f8 01       	movw	r30, r16
    177c:	80 83       	st	Z, r24
    177e:	91 83       	std	Z+1, r25	; 0x01
    1780:	a2 83       	std	Z+2, r26	; 0x02
    1782:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1784:	fe 01       	movw	r30, r28
    1786:	e7 59       	subi	r30, 0x97	; 151
    1788:	ff 4f       	sbci	r31, 0xFF	; 255
    178a:	60 81       	ld	r22, Z
    178c:	71 81       	ldd	r23, Z+1	; 0x01
    178e:	82 81       	ldd	r24, Z+2	; 0x02
    1790:	93 81       	ldd	r25, Z+3	; 0x03
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	40 e8       	ldi	r20, 0x80	; 128
    1798:	5f e3       	ldi	r21, 0x3F	; 63
    179a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    179e:	88 23       	and	r24, r24
    17a0:	44 f4       	brge	.+16     	; 0x17b2 <main+0xc6c>
		__ticks = 1;
    17a2:	fe 01       	movw	r30, r28
    17a4:	e9 59       	subi	r30, 0x99	; 153
    17a6:	ff 4f       	sbci	r31, 0xFF	; 255
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	91 83       	std	Z+1, r25	; 0x01
    17ae:	80 83       	st	Z, r24
    17b0:	64 c0       	rjmp	.+200    	; 0x187a <main+0xd34>
	else if (__tmp > 65535)
    17b2:	fe 01       	movw	r30, r28
    17b4:	e7 59       	subi	r30, 0x97	; 151
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	60 81       	ld	r22, Z
    17ba:	71 81       	ldd	r23, Z+1	; 0x01
    17bc:	82 81       	ldd	r24, Z+2	; 0x02
    17be:	93 81       	ldd	r25, Z+3	; 0x03
    17c0:	20 e0       	ldi	r18, 0x00	; 0
    17c2:	3f ef       	ldi	r19, 0xFF	; 255
    17c4:	4f e7       	ldi	r20, 0x7F	; 127
    17c6:	57 e4       	ldi	r21, 0x47	; 71
    17c8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    17cc:	18 16       	cp	r1, r24
    17ce:	0c f0       	brlt	.+2      	; 0x17d2 <main+0xc8c>
    17d0:	43 c0       	rjmp	.+134    	; 0x1858 <main+0xd12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17d2:	fe 01       	movw	r30, r28
    17d4:	e3 59       	subi	r30, 0x93	; 147
    17d6:	ff 4f       	sbci	r31, 0xFF	; 255
    17d8:	60 81       	ld	r22, Z
    17da:	71 81       	ldd	r23, Z+1	; 0x01
    17dc:	82 81       	ldd	r24, Z+2	; 0x02
    17de:	93 81       	ldd	r25, Z+3	; 0x03
    17e0:	20 e0       	ldi	r18, 0x00	; 0
    17e2:	30 e0       	ldi	r19, 0x00	; 0
    17e4:	40 e2       	ldi	r20, 0x20	; 32
    17e6:	51 e4       	ldi	r21, 0x41	; 65
    17e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17ec:	dc 01       	movw	r26, r24
    17ee:	cb 01       	movw	r24, r22
    17f0:	8e 01       	movw	r16, r28
    17f2:	09 59       	subi	r16, 0x99	; 153
    17f4:	1f 4f       	sbci	r17, 0xFF	; 255
    17f6:	bc 01       	movw	r22, r24
    17f8:	cd 01       	movw	r24, r26
    17fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	f8 01       	movw	r30, r16
    1804:	91 83       	std	Z+1, r25	; 0x01
    1806:	80 83       	st	Z, r24
    1808:	1f c0       	rjmp	.+62     	; 0x1848 <main+0xd02>
    180a:	fe 01       	movw	r30, r28
    180c:	eb 59       	subi	r30, 0x9B	; 155
    180e:	ff 4f       	sbci	r31, 0xFF	; 255
    1810:	88 ec       	ldi	r24, 0xC8	; 200
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	91 83       	std	Z+1, r25	; 0x01
    1816:	80 83       	st	Z, r24
    1818:	fe 01       	movw	r30, r28
    181a:	eb 59       	subi	r30, 0x9B	; 155
    181c:	ff 4f       	sbci	r31, 0xFF	; 255
    181e:	80 81       	ld	r24, Z
    1820:	91 81       	ldd	r25, Z+1	; 0x01
    1822:	01 97       	sbiw	r24, 0x01	; 1
    1824:	f1 f7       	brne	.-4      	; 0x1822 <main+0xcdc>
    1826:	fe 01       	movw	r30, r28
    1828:	eb 59       	subi	r30, 0x9B	; 155
    182a:	ff 4f       	sbci	r31, 0xFF	; 255
    182c:	91 83       	std	Z+1, r25	; 0x01
    182e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1830:	de 01       	movw	r26, r28
    1832:	a9 59       	subi	r26, 0x99	; 153
    1834:	bf 4f       	sbci	r27, 0xFF	; 255
    1836:	fe 01       	movw	r30, r28
    1838:	e9 59       	subi	r30, 0x99	; 153
    183a:	ff 4f       	sbci	r31, 0xFF	; 255
    183c:	80 81       	ld	r24, Z
    183e:	91 81       	ldd	r25, Z+1	; 0x01
    1840:	01 97       	sbiw	r24, 0x01	; 1
    1842:	11 96       	adiw	r26, 0x01	; 1
    1844:	9c 93       	st	X, r25
    1846:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1848:	fe 01       	movw	r30, r28
    184a:	e9 59       	subi	r30, 0x99	; 153
    184c:	ff 4f       	sbci	r31, 0xFF	; 255
    184e:	80 81       	ld	r24, Z
    1850:	91 81       	ldd	r25, Z+1	; 0x01
    1852:	00 97       	sbiw	r24, 0x00	; 0
    1854:	d1 f6       	brne	.-76     	; 0x180a <main+0xcc4>
    1856:	28 c0       	rjmp	.+80     	; 0x18a8 <main+0xd62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1858:	8e 01       	movw	r16, r28
    185a:	09 59       	subi	r16, 0x99	; 153
    185c:	1f 4f       	sbci	r17, 0xFF	; 255
    185e:	fe 01       	movw	r30, r28
    1860:	e7 59       	subi	r30, 0x97	; 151
    1862:	ff 4f       	sbci	r31, 0xFF	; 255
    1864:	60 81       	ld	r22, Z
    1866:	71 81       	ldd	r23, Z+1	; 0x01
    1868:	82 81       	ldd	r24, Z+2	; 0x02
    186a:	93 81       	ldd	r25, Z+3	; 0x03
    186c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1870:	dc 01       	movw	r26, r24
    1872:	cb 01       	movw	r24, r22
    1874:	f8 01       	movw	r30, r16
    1876:	91 83       	std	Z+1, r25	; 0x01
    1878:	80 83       	st	Z, r24
    187a:	de 01       	movw	r26, r28
    187c:	ad 59       	subi	r26, 0x9D	; 157
    187e:	bf 4f       	sbci	r27, 0xFF	; 255
    1880:	fe 01       	movw	r30, r28
    1882:	e9 59       	subi	r30, 0x99	; 153
    1884:	ff 4f       	sbci	r31, 0xFF	; 255
    1886:	80 81       	ld	r24, Z
    1888:	91 81       	ldd	r25, Z+1	; 0x01
    188a:	11 96       	adiw	r26, 0x01	; 1
    188c:	9c 93       	st	X, r25
    188e:	8e 93       	st	-X, r24
    1890:	fe 01       	movw	r30, r28
    1892:	ed 59       	subi	r30, 0x9D	; 157
    1894:	ff 4f       	sbci	r31, 0xFF	; 255
    1896:	80 81       	ld	r24, Z
    1898:	91 81       	ldd	r25, Z+1	; 0x01
    189a:	01 97       	sbiw	r24, 0x01	; 1
    189c:	f1 f7       	brne	.-4      	; 0x189a <main+0xd54>
    189e:	fe 01       	movw	r30, r28
    18a0:	ed 59       	subi	r30, 0x9D	; 157
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	91 83       	std	Z+1, r25	; 0x01
    18a6:	80 83       	st	Z, r24

                }

            }

            if (bit_is_clear(PINA,2))
    18a8:	e9 e3       	ldi	r30, 0x39	; 57
    18aa:	f0 e0       	ldi	r31, 0x00	; 0
    18ac:	80 81       	ld	r24, Z
    18ae:	88 2f       	mov	r24, r24
    18b0:	90 e0       	ldi	r25, 0x00	; 0
    18b2:	84 70       	andi	r24, 0x04	; 4
    18b4:	90 70       	andi	r25, 0x00	; 0
    18b6:	00 97       	sbiw	r24, 0x00	; 0
    18b8:	09 f0       	breq	.+2      	; 0x18bc <main+0xd76>
    18ba:	cf c0       	rjmp	.+414    	; 0x1a5a <main+0xf14>

            {

                if (HOU<24)
    18bc:	80 91 88 00 	lds	r24, 0x0088
    18c0:	90 91 89 00 	lds	r25, 0x0089
    18c4:	88 31       	cpi	r24, 0x18	; 24
    18c6:	91 05       	cpc	r25, r1
    18c8:	4c f4       	brge	.+18     	; 0x18dc <main+0xd96>

                {

                    HOU++;
    18ca:	80 91 88 00 	lds	r24, 0x0088
    18ce:	90 91 89 00 	lds	r25, 0x0089
    18d2:	01 96       	adiw	r24, 0x01	; 1
    18d4:	90 93 89 00 	sts	0x0089, r25
    18d8:	80 93 88 00 	sts	0x0088, r24
    18dc:	fe 01       	movw	r30, r28
    18de:	e1 5a       	subi	r30, 0xA1	; 161
    18e0:	ff 4f       	sbci	r31, 0xFF	; 255
    18e2:	80 e0       	ldi	r24, 0x00	; 0
    18e4:	90 e0       	ldi	r25, 0x00	; 0
    18e6:	ac e5       	ldi	r26, 0x5C	; 92
    18e8:	b3 e4       	ldi	r27, 0x43	; 67
    18ea:	80 83       	st	Z, r24
    18ec:	91 83       	std	Z+1, r25	; 0x01
    18ee:	a2 83       	std	Z+2, r26	; 0x02
    18f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18f2:	8e 01       	movw	r16, r28
    18f4:	05 5a       	subi	r16, 0xA5	; 165
    18f6:	1f 4f       	sbci	r17, 0xFF	; 255
    18f8:	fe 01       	movw	r30, r28
    18fa:	e1 5a       	subi	r30, 0xA1	; 161
    18fc:	ff 4f       	sbci	r31, 0xFF	; 255
    18fe:	60 81       	ld	r22, Z
    1900:	71 81       	ldd	r23, Z+1	; 0x01
    1902:	82 81       	ldd	r24, Z+2	; 0x02
    1904:	93 81       	ldd	r25, Z+3	; 0x03
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	4a ef       	ldi	r20, 0xFA	; 250
    190c:	54 e4       	ldi	r21, 0x44	; 68
    190e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1912:	dc 01       	movw	r26, r24
    1914:	cb 01       	movw	r24, r22
    1916:	f8 01       	movw	r30, r16
    1918:	80 83       	st	Z, r24
    191a:	91 83       	std	Z+1, r25	; 0x01
    191c:	a2 83       	std	Z+2, r26	; 0x02
    191e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1920:	fe 01       	movw	r30, r28
    1922:	e5 5a       	subi	r30, 0xA5	; 165
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	60 81       	ld	r22, Z
    1928:	71 81       	ldd	r23, Z+1	; 0x01
    192a:	82 81       	ldd	r24, Z+2	; 0x02
    192c:	93 81       	ldd	r25, Z+3	; 0x03
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	40 e8       	ldi	r20, 0x80	; 128
    1934:	5f e3       	ldi	r21, 0x3F	; 63
    1936:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    193a:	88 23       	and	r24, r24
    193c:	44 f4       	brge	.+16     	; 0x194e <main+0xe08>
		__ticks = 1;
    193e:	fe 01       	movw	r30, r28
    1940:	e7 5a       	subi	r30, 0xA7	; 167
    1942:	ff 4f       	sbci	r31, 0xFF	; 255
    1944:	81 e0       	ldi	r24, 0x01	; 1
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	91 83       	std	Z+1, r25	; 0x01
    194a:	80 83       	st	Z, r24
    194c:	64 c0       	rjmp	.+200    	; 0x1a16 <main+0xed0>
	else if (__tmp > 65535)
    194e:	fe 01       	movw	r30, r28
    1950:	e5 5a       	subi	r30, 0xA5	; 165
    1952:	ff 4f       	sbci	r31, 0xFF	; 255
    1954:	60 81       	ld	r22, Z
    1956:	71 81       	ldd	r23, Z+1	; 0x01
    1958:	82 81       	ldd	r24, Z+2	; 0x02
    195a:	93 81       	ldd	r25, Z+3	; 0x03
    195c:	20 e0       	ldi	r18, 0x00	; 0
    195e:	3f ef       	ldi	r19, 0xFF	; 255
    1960:	4f e7       	ldi	r20, 0x7F	; 127
    1962:	57 e4       	ldi	r21, 0x47	; 71
    1964:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1968:	18 16       	cp	r1, r24
    196a:	0c f0       	brlt	.+2      	; 0x196e <main+0xe28>
    196c:	43 c0       	rjmp	.+134    	; 0x19f4 <main+0xeae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    196e:	fe 01       	movw	r30, r28
    1970:	e1 5a       	subi	r30, 0xA1	; 161
    1972:	ff 4f       	sbci	r31, 0xFF	; 255
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	82 81       	ldd	r24, Z+2	; 0x02
    197a:	93 81       	ldd	r25, Z+3	; 0x03
    197c:	20 e0       	ldi	r18, 0x00	; 0
    197e:	30 e0       	ldi	r19, 0x00	; 0
    1980:	40 e2       	ldi	r20, 0x20	; 32
    1982:	51 e4       	ldi	r21, 0x41	; 65
    1984:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1988:	dc 01       	movw	r26, r24
    198a:	cb 01       	movw	r24, r22
    198c:	8e 01       	movw	r16, r28
    198e:	07 5a       	subi	r16, 0xA7	; 167
    1990:	1f 4f       	sbci	r17, 0xFF	; 255
    1992:	bc 01       	movw	r22, r24
    1994:	cd 01       	movw	r24, r26
    1996:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    199a:	dc 01       	movw	r26, r24
    199c:	cb 01       	movw	r24, r22
    199e:	f8 01       	movw	r30, r16
    19a0:	91 83       	std	Z+1, r25	; 0x01
    19a2:	80 83       	st	Z, r24
    19a4:	1f c0       	rjmp	.+62     	; 0x19e4 <main+0xe9e>
    19a6:	fe 01       	movw	r30, r28
    19a8:	e9 5a       	subi	r30, 0xA9	; 169
    19aa:	ff 4f       	sbci	r31, 0xFF	; 255
    19ac:	88 ec       	ldi	r24, 0xC8	; 200
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	91 83       	std	Z+1, r25	; 0x01
    19b2:	80 83       	st	Z, r24
    19b4:	fe 01       	movw	r30, r28
    19b6:	e9 5a       	subi	r30, 0xA9	; 169
    19b8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ba:	80 81       	ld	r24, Z
    19bc:	91 81       	ldd	r25, Z+1	; 0x01
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	f1 f7       	brne	.-4      	; 0x19be <main+0xe78>
    19c2:	fe 01       	movw	r30, r28
    19c4:	e9 5a       	subi	r30, 0xA9	; 169
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	91 83       	std	Z+1, r25	; 0x01
    19ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19cc:	de 01       	movw	r26, r28
    19ce:	a7 5a       	subi	r26, 0xA7	; 167
    19d0:	bf 4f       	sbci	r27, 0xFF	; 255
    19d2:	fe 01       	movw	r30, r28
    19d4:	e7 5a       	subi	r30, 0xA7	; 167
    19d6:	ff 4f       	sbci	r31, 0xFF	; 255
    19d8:	80 81       	ld	r24, Z
    19da:	91 81       	ldd	r25, Z+1	; 0x01
    19dc:	01 97       	sbiw	r24, 0x01	; 1
    19de:	11 96       	adiw	r26, 0x01	; 1
    19e0:	9c 93       	st	X, r25
    19e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19e4:	fe 01       	movw	r30, r28
    19e6:	e7 5a       	subi	r30, 0xA7	; 167
    19e8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ea:	80 81       	ld	r24, Z
    19ec:	91 81       	ldd	r25, Z+1	; 0x01
    19ee:	00 97       	sbiw	r24, 0x00	; 0
    19f0:	d1 f6       	brne	.-76     	; 0x19a6 <main+0xe60>
    19f2:	28 c0       	rjmp	.+80     	; 0x1a44 <main+0xefe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19f4:	8e 01       	movw	r16, r28
    19f6:	07 5a       	subi	r16, 0xA7	; 167
    19f8:	1f 4f       	sbci	r17, 0xFF	; 255
    19fa:	fe 01       	movw	r30, r28
    19fc:	e5 5a       	subi	r30, 0xA5	; 165
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	60 81       	ld	r22, Z
    1a02:	71 81       	ldd	r23, Z+1	; 0x01
    1a04:	82 81       	ldd	r24, Z+2	; 0x02
    1a06:	93 81       	ldd	r25, Z+3	; 0x03
    1a08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a0c:	dc 01       	movw	r26, r24
    1a0e:	cb 01       	movw	r24, r22
    1a10:	f8 01       	movw	r30, r16
    1a12:	91 83       	std	Z+1, r25	; 0x01
    1a14:	80 83       	st	Z, r24
    1a16:	de 01       	movw	r26, r28
    1a18:	ab 5a       	subi	r26, 0xAB	; 171
    1a1a:	bf 4f       	sbci	r27, 0xFF	; 255
    1a1c:	fe 01       	movw	r30, r28
    1a1e:	e7 5a       	subi	r30, 0xA7	; 167
    1a20:	ff 4f       	sbci	r31, 0xFF	; 255
    1a22:	80 81       	ld	r24, Z
    1a24:	91 81       	ldd	r25, Z+1	; 0x01
    1a26:	11 96       	adiw	r26, 0x01	; 1
    1a28:	9c 93       	st	X, r25
    1a2a:	8e 93       	st	-X, r24
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	eb 5a       	subi	r30, 0xAB	; 171
    1a30:	ff 4f       	sbci	r31, 0xFF	; 255
    1a32:	80 81       	ld	r24, Z
    1a34:	91 81       	ldd	r25, Z+1	; 0x01
    1a36:	01 97       	sbiw	r24, 0x01	; 1
    1a38:	f1 f7       	brne	.-4      	; 0x1a36 <main+0xef0>
    1a3a:	fe 01       	movw	r30, r28
    1a3c:	eb 5a       	subi	r30, 0xAB	; 171
    1a3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a40:	91 83       	std	Z+1, r25	; 0x01
    1a42:	80 83       	st	Z, r24

                }

                _delay_ms(220);

                if (HOU==24)
    1a44:	80 91 88 00 	lds	r24, 0x0088
    1a48:	90 91 89 00 	lds	r25, 0x0089
    1a4c:	88 31       	cpi	r24, 0x18	; 24
    1a4e:	91 05       	cpc	r25, r1
    1a50:	21 f4       	brne	.+8      	; 0x1a5a <main+0xf14>

                {

                    HOU=0;
    1a52:	10 92 89 00 	sts	0x0089, r1
    1a56:	10 92 88 00 	sts	0x0088, r1

                }

            }

            if (bit_is_clear(PINA,3))
    1a5a:	e9 e3       	ldi	r30, 0x39	; 57
    1a5c:	f0 e0       	ldi	r31, 0x00	; 0
    1a5e:	80 81       	ld	r24, Z
    1a60:	88 2f       	mov	r24, r24
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	88 70       	andi	r24, 0x08	; 8
    1a66:	90 70       	andi	r25, 0x00	; 0
    1a68:	00 97       	sbiw	r24, 0x00	; 0
    1a6a:	09 f0       	breq	.+2      	; 0x1a6e <main+0xf28>
    1a6c:	c5 c0       	rjmp	.+394    	; 0x1bf8 <main+0x10b2>

            {

                if (HOU>0)
    1a6e:	80 91 88 00 	lds	r24, 0x0088
    1a72:	90 91 89 00 	lds	r25, 0x0089
    1a76:	18 16       	cp	r1, r24
    1a78:	19 06       	cpc	r1, r25
    1a7a:	0c f0       	brlt	.+2      	; 0x1a7e <main+0xf38>
    1a7c:	bd c0       	rjmp	.+378    	; 0x1bf8 <main+0x10b2>

                {

                    HOU--;
    1a7e:	80 91 88 00 	lds	r24, 0x0088
    1a82:	90 91 89 00 	lds	r25, 0x0089
    1a86:	01 97       	sbiw	r24, 0x01	; 1
    1a88:	90 93 89 00 	sts	0x0089, r25
    1a8c:	80 93 88 00 	sts	0x0088, r24
    1a90:	fe 01       	movw	r30, r28
    1a92:	ef 5a       	subi	r30, 0xAF	; 175
    1a94:	ff 4f       	sbci	r31, 0xFF	; 255
    1a96:	80 e0       	ldi	r24, 0x00	; 0
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	ac e5       	ldi	r26, 0x5C	; 92
    1a9c:	b3 e4       	ldi	r27, 0x43	; 67
    1a9e:	80 83       	st	Z, r24
    1aa0:	91 83       	std	Z+1, r25	; 0x01
    1aa2:	a2 83       	std	Z+2, r26	; 0x02
    1aa4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1aa6:	8e 01       	movw	r16, r28
    1aa8:	03 5b       	subi	r16, 0xB3	; 179
    1aaa:	1f 4f       	sbci	r17, 0xFF	; 255
    1aac:	fe 01       	movw	r30, r28
    1aae:	ef 5a       	subi	r30, 0xAF	; 175
    1ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab2:	60 81       	ld	r22, Z
    1ab4:	71 81       	ldd	r23, Z+1	; 0x01
    1ab6:	82 81       	ldd	r24, Z+2	; 0x02
    1ab8:	93 81       	ldd	r25, Z+3	; 0x03
    1aba:	20 e0       	ldi	r18, 0x00	; 0
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	4a ef       	ldi	r20, 0xFA	; 250
    1ac0:	54 e4       	ldi	r21, 0x44	; 68
    1ac2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ac6:	dc 01       	movw	r26, r24
    1ac8:	cb 01       	movw	r24, r22
    1aca:	f8 01       	movw	r30, r16
    1acc:	80 83       	st	Z, r24
    1ace:	91 83       	std	Z+1, r25	; 0x01
    1ad0:	a2 83       	std	Z+2, r26	; 0x02
    1ad2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ad4:	fe 01       	movw	r30, r28
    1ad6:	e3 5b       	subi	r30, 0xB3	; 179
    1ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ada:	60 81       	ld	r22, Z
    1adc:	71 81       	ldd	r23, Z+1	; 0x01
    1ade:	82 81       	ldd	r24, Z+2	; 0x02
    1ae0:	93 81       	ldd	r25, Z+3	; 0x03
    1ae2:	20 e0       	ldi	r18, 0x00	; 0
    1ae4:	30 e0       	ldi	r19, 0x00	; 0
    1ae6:	40 e8       	ldi	r20, 0x80	; 128
    1ae8:	5f e3       	ldi	r21, 0x3F	; 63
    1aea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1aee:	88 23       	and	r24, r24
    1af0:	44 f4       	brge	.+16     	; 0x1b02 <main+0xfbc>
		__ticks = 1;
    1af2:	fe 01       	movw	r30, r28
    1af4:	e5 5b       	subi	r30, 0xB5	; 181
    1af6:	ff 4f       	sbci	r31, 0xFF	; 255
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	91 83       	std	Z+1, r25	; 0x01
    1afe:	80 83       	st	Z, r24
    1b00:	64 c0       	rjmp	.+200    	; 0x1bca <main+0x1084>
	else if (__tmp > 65535)
    1b02:	fe 01       	movw	r30, r28
    1b04:	e3 5b       	subi	r30, 0xB3	; 179
    1b06:	ff 4f       	sbci	r31, 0xFF	; 255
    1b08:	60 81       	ld	r22, Z
    1b0a:	71 81       	ldd	r23, Z+1	; 0x01
    1b0c:	82 81       	ldd	r24, Z+2	; 0x02
    1b0e:	93 81       	ldd	r25, Z+3	; 0x03
    1b10:	20 e0       	ldi	r18, 0x00	; 0
    1b12:	3f ef       	ldi	r19, 0xFF	; 255
    1b14:	4f e7       	ldi	r20, 0x7F	; 127
    1b16:	57 e4       	ldi	r21, 0x47	; 71
    1b18:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b1c:	18 16       	cp	r1, r24
    1b1e:	0c f0       	brlt	.+2      	; 0x1b22 <main+0xfdc>
    1b20:	43 c0       	rjmp	.+134    	; 0x1ba8 <main+0x1062>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b22:	fe 01       	movw	r30, r28
    1b24:	ef 5a       	subi	r30, 0xAF	; 175
    1b26:	ff 4f       	sbci	r31, 0xFF	; 255
    1b28:	60 81       	ld	r22, Z
    1b2a:	71 81       	ldd	r23, Z+1	; 0x01
    1b2c:	82 81       	ldd	r24, Z+2	; 0x02
    1b2e:	93 81       	ldd	r25, Z+3	; 0x03
    1b30:	20 e0       	ldi	r18, 0x00	; 0
    1b32:	30 e0       	ldi	r19, 0x00	; 0
    1b34:	40 e2       	ldi	r20, 0x20	; 32
    1b36:	51 e4       	ldi	r21, 0x41	; 65
    1b38:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b3c:	dc 01       	movw	r26, r24
    1b3e:	cb 01       	movw	r24, r22
    1b40:	8e 01       	movw	r16, r28
    1b42:	05 5b       	subi	r16, 0xB5	; 181
    1b44:	1f 4f       	sbci	r17, 0xFF	; 255
    1b46:	bc 01       	movw	r22, r24
    1b48:	cd 01       	movw	r24, r26
    1b4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b4e:	dc 01       	movw	r26, r24
    1b50:	cb 01       	movw	r24, r22
    1b52:	f8 01       	movw	r30, r16
    1b54:	91 83       	std	Z+1, r25	; 0x01
    1b56:	80 83       	st	Z, r24
    1b58:	1f c0       	rjmp	.+62     	; 0x1b98 <main+0x1052>
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	e7 5b       	subi	r30, 0xB7	; 183
    1b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b60:	88 ec       	ldi	r24, 0xC8	; 200
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	91 83       	std	Z+1, r25	; 0x01
    1b66:	80 83       	st	Z, r24
    1b68:	fe 01       	movw	r30, r28
    1b6a:	e7 5b       	subi	r30, 0xB7	; 183
    1b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6e:	80 81       	ld	r24, Z
    1b70:	91 81       	ldd	r25, Z+1	; 0x01
    1b72:	01 97       	sbiw	r24, 0x01	; 1
    1b74:	f1 f7       	brne	.-4      	; 0x1b72 <main+0x102c>
    1b76:	fe 01       	movw	r30, r28
    1b78:	e7 5b       	subi	r30, 0xB7	; 183
    1b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7c:	91 83       	std	Z+1, r25	; 0x01
    1b7e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b80:	de 01       	movw	r26, r28
    1b82:	a5 5b       	subi	r26, 0xB5	; 181
    1b84:	bf 4f       	sbci	r27, 0xFF	; 255
    1b86:	fe 01       	movw	r30, r28
    1b88:	e5 5b       	subi	r30, 0xB5	; 181
    1b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8c:	80 81       	ld	r24, Z
    1b8e:	91 81       	ldd	r25, Z+1	; 0x01
    1b90:	01 97       	sbiw	r24, 0x01	; 1
    1b92:	11 96       	adiw	r26, 0x01	; 1
    1b94:	9c 93       	st	X, r25
    1b96:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b98:	fe 01       	movw	r30, r28
    1b9a:	e5 5b       	subi	r30, 0xB5	; 181
    1b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9e:	80 81       	ld	r24, Z
    1ba0:	91 81       	ldd	r25, Z+1	; 0x01
    1ba2:	00 97       	sbiw	r24, 0x00	; 0
    1ba4:	d1 f6       	brne	.-76     	; 0x1b5a <main+0x1014>
    1ba6:	28 c0       	rjmp	.+80     	; 0x1bf8 <main+0x10b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ba8:	8e 01       	movw	r16, r28
    1baa:	05 5b       	subi	r16, 0xB5	; 181
    1bac:	1f 4f       	sbci	r17, 0xFF	; 255
    1bae:	fe 01       	movw	r30, r28
    1bb0:	e3 5b       	subi	r30, 0xB3	; 179
    1bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb4:	60 81       	ld	r22, Z
    1bb6:	71 81       	ldd	r23, Z+1	; 0x01
    1bb8:	82 81       	ldd	r24, Z+2	; 0x02
    1bba:	93 81       	ldd	r25, Z+3	; 0x03
    1bbc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	f8 01       	movw	r30, r16
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	80 83       	st	Z, r24
    1bca:	de 01       	movw	r26, r28
    1bcc:	a9 5b       	subi	r26, 0xB9	; 185
    1bce:	bf 4f       	sbci	r27, 0xFF	; 255
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	e5 5b       	subi	r30, 0xB5	; 181
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	80 81       	ld	r24, Z
    1bd8:	91 81       	ldd	r25, Z+1	; 0x01
    1bda:	11 96       	adiw	r26, 0x01	; 1
    1bdc:	9c 93       	st	X, r25
    1bde:	8e 93       	st	-X, r24
    1be0:	fe 01       	movw	r30, r28
    1be2:	e9 5b       	subi	r30, 0xB9	; 185
    1be4:	ff 4f       	sbci	r31, 0xFF	; 255
    1be6:	80 81       	ld	r24, Z
    1be8:	91 81       	ldd	r25, Z+1	; 0x01
    1bea:	01 97       	sbiw	r24, 0x01	; 1
    1bec:	f1 f7       	brne	.-4      	; 0x1bea <main+0x10a4>
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e9 5b       	subi	r30, 0xB9	; 185
    1bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf4:	91 83       	std	Z+1, r25	; 0x01
    1bf6:	80 83       	st	Z, r24





        if (bit_is_clear(PINA,4))
    1bf8:	e9 e3       	ldi	r30, 0x39	; 57
    1bfa:	f0 e0       	ldi	r31, 0x00	; 0
    1bfc:	80 81       	ld	r24, Z
    1bfe:	88 2f       	mov	r24, r24
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	80 71       	andi	r24, 0x10	; 16
    1c04:	90 70       	andi	r25, 0x00	; 0
    1c06:	00 97       	sbiw	r24, 0x00	; 0
    1c08:	09 f0       	breq	.+2      	; 0x1c0c <main+0x10c6>
    1c0a:	fc c9       	rjmp	.-3080   	; 0x1004 <main+0x4be>

        {

            if (bit_is_clear(PINA,0))
    1c0c:	e9 e3       	ldi	r30, 0x39	; 57
    1c0e:	f0 e0       	ldi	r31, 0x00	; 0
    1c10:	80 81       	ld	r24, Z
    1c12:	88 2f       	mov	r24, r24
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	81 70       	andi	r24, 0x01	; 1
    1c18:	90 70       	andi	r25, 0x00	; 0
    1c1a:	00 97       	sbiw	r24, 0x00	; 0
    1c1c:	09 f0       	breq	.+2      	; 0x1c20 <main+0x10da>
    1c1e:	2c c1       	rjmp	.+600    	; 0x1e78 <main+0x1332>

            {

                    if (ALMIN<60)
    1c20:	fe 01       	movw	r30, r28
    1c22:	e7 54       	subi	r30, 0x47	; 71
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	80 81       	ld	r24, Z
    1c28:	91 81       	ldd	r25, Z+1	; 0x01
    1c2a:	8c 33       	cpi	r24, 0x3C	; 60
    1c2c:	91 05       	cpc	r25, r1
    1c2e:	0c f0       	brlt	.+2      	; 0x1c32 <main+0x10ec>
    1c30:	90 c0       	rjmp	.+288    	; 0x1d52 <main+0x120c>

                    {

                        ALMIN++;
    1c32:	de 01       	movw	r26, r28
    1c34:	a7 54       	subi	r26, 0x47	; 71
    1c36:	bf 4f       	sbci	r27, 0xFF	; 255
    1c38:	fe 01       	movw	r30, r28
    1c3a:	e7 54       	subi	r30, 0x47	; 71
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	80 81       	ld	r24, Z
    1c40:	91 81       	ldd	r25, Z+1	; 0x01
    1c42:	01 96       	adiw	r24, 0x01	; 1
    1c44:	8d 93       	st	X+, r24
    1c46:	9c 93       	st	X, r25
    1c48:	fe 01       	movw	r30, r28
    1c4a:	ed 5b       	subi	r30, 0xBD	; 189
    1c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4e:	80 e0       	ldi	r24, 0x00	; 0
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	ac e5       	ldi	r26, 0x5C	; 92
    1c54:	b3 e4       	ldi	r27, 0x43	; 67
    1c56:	80 83       	st	Z, r24
    1c58:	91 83       	std	Z+1, r25	; 0x01
    1c5a:	a2 83       	std	Z+2, r26	; 0x02
    1c5c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c5e:	8e 01       	movw	r16, r28
    1c60:	01 5c       	subi	r16, 0xC1	; 193
    1c62:	1f 4f       	sbci	r17, 0xFF	; 255
    1c64:	fe 01       	movw	r30, r28
    1c66:	ed 5b       	subi	r30, 0xBD	; 189
    1c68:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6a:	60 81       	ld	r22, Z
    1c6c:	71 81       	ldd	r23, Z+1	; 0x01
    1c6e:	82 81       	ldd	r24, Z+2	; 0x02
    1c70:	93 81       	ldd	r25, Z+3	; 0x03
    1c72:	20 e0       	ldi	r18, 0x00	; 0
    1c74:	30 e0       	ldi	r19, 0x00	; 0
    1c76:	4a ef       	ldi	r20, 0xFA	; 250
    1c78:	54 e4       	ldi	r21, 0x44	; 68
    1c7a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c7e:	dc 01       	movw	r26, r24
    1c80:	cb 01       	movw	r24, r22
    1c82:	f8 01       	movw	r30, r16
    1c84:	80 83       	st	Z, r24
    1c86:	91 83       	std	Z+1, r25	; 0x01
    1c88:	a2 83       	std	Z+2, r26	; 0x02
    1c8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c8c:	fe 01       	movw	r30, r28
    1c8e:	ff 96       	adiw	r30, 0x3f	; 63
    1c90:	60 81       	ld	r22, Z
    1c92:	71 81       	ldd	r23, Z+1	; 0x01
    1c94:	82 81       	ldd	r24, Z+2	; 0x02
    1c96:	93 81       	ldd	r25, Z+3	; 0x03
    1c98:	20 e0       	ldi	r18, 0x00	; 0
    1c9a:	30 e0       	ldi	r19, 0x00	; 0
    1c9c:	40 e8       	ldi	r20, 0x80	; 128
    1c9e:	5f e3       	ldi	r21, 0x3F	; 63
    1ca0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ca4:	88 23       	and	r24, r24
    1ca6:	2c f4       	brge	.+10     	; 0x1cb2 <main+0x116c>
		__ticks = 1;
    1ca8:	81 e0       	ldi	r24, 0x01	; 1
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	9e af       	std	Y+62, r25	; 0x3e
    1cae:	8d af       	std	Y+61, r24	; 0x3d
    1cb0:	46 c0       	rjmp	.+140    	; 0x1d3e <main+0x11f8>
	else if (__tmp > 65535)
    1cb2:	fe 01       	movw	r30, r28
    1cb4:	ff 96       	adiw	r30, 0x3f	; 63
    1cb6:	60 81       	ld	r22, Z
    1cb8:	71 81       	ldd	r23, Z+1	; 0x01
    1cba:	82 81       	ldd	r24, Z+2	; 0x02
    1cbc:	93 81       	ldd	r25, Z+3	; 0x03
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	3f ef       	ldi	r19, 0xFF	; 255
    1cc2:	4f e7       	ldi	r20, 0x7F	; 127
    1cc4:	57 e4       	ldi	r21, 0x47	; 71
    1cc6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1cca:	18 16       	cp	r1, r24
    1ccc:	64 f5       	brge	.+88     	; 0x1d26 <main+0x11e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cce:	fe 01       	movw	r30, r28
    1cd0:	ed 5b       	subi	r30, 0xBD	; 189
    1cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd4:	60 81       	ld	r22, Z
    1cd6:	71 81       	ldd	r23, Z+1	; 0x01
    1cd8:	82 81       	ldd	r24, Z+2	; 0x02
    1cda:	93 81       	ldd	r25, Z+3	; 0x03
    1cdc:	20 e0       	ldi	r18, 0x00	; 0
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	40 e2       	ldi	r20, 0x20	; 32
    1ce2:	51 e4       	ldi	r21, 0x41	; 65
    1ce4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ce8:	dc 01       	movw	r26, r24
    1cea:	cb 01       	movw	r24, r22
    1cec:	bc 01       	movw	r22, r24
    1cee:	cd 01       	movw	r24, r26
    1cf0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cf4:	dc 01       	movw	r26, r24
    1cf6:	cb 01       	movw	r24, r22
    1cf8:	9e af       	std	Y+62, r25	; 0x3e
    1cfa:	8d af       	std	Y+61, r24	; 0x3d
    1cfc:	0f c0       	rjmp	.+30     	; 0x1d1c <main+0x11d6>
    1cfe:	88 ec       	ldi	r24, 0xC8	; 200
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	9c af       	std	Y+60, r25	; 0x3c
    1d04:	8b af       	std	Y+59, r24	; 0x3b
    1d06:	8b ad       	ldd	r24, Y+59	; 0x3b
    1d08:	9c ad       	ldd	r25, Y+60	; 0x3c
    1d0a:	01 97       	sbiw	r24, 0x01	; 1
    1d0c:	f1 f7       	brne	.-4      	; 0x1d0a <main+0x11c4>
    1d0e:	9c af       	std	Y+60, r25	; 0x3c
    1d10:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d12:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d14:	9e ad       	ldd	r25, Y+62	; 0x3e
    1d16:	01 97       	sbiw	r24, 0x01	; 1
    1d18:	9e af       	std	Y+62, r25	; 0x3e
    1d1a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d1c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d1e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1d20:	00 97       	sbiw	r24, 0x00	; 0
    1d22:	69 f7       	brne	.-38     	; 0x1cfe <main+0x11b8>
    1d24:	16 c0       	rjmp	.+44     	; 0x1d52 <main+0x120c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d26:	fe 01       	movw	r30, r28
    1d28:	ff 96       	adiw	r30, 0x3f	; 63
    1d2a:	60 81       	ld	r22, Z
    1d2c:	71 81       	ldd	r23, Z+1	; 0x01
    1d2e:	82 81       	ldd	r24, Z+2	; 0x02
    1d30:	93 81       	ldd	r25, Z+3	; 0x03
    1d32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d36:	dc 01       	movw	r26, r24
    1d38:	cb 01       	movw	r24, r22
    1d3a:	9e af       	std	Y+62, r25	; 0x3e
    1d3c:	8d af       	std	Y+61, r24	; 0x3d
    1d3e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d40:	9e ad       	ldd	r25, Y+62	; 0x3e
    1d42:	9a af       	std	Y+58, r25	; 0x3a
    1d44:	89 af       	std	Y+57, r24	; 0x39
    1d46:	89 ad       	ldd	r24, Y+57	; 0x39
    1d48:	9a ad       	ldd	r25, Y+58	; 0x3a
    1d4a:	01 97       	sbiw	r24, 0x01	; 1
    1d4c:	f1 f7       	brne	.-4      	; 0x1d4a <main+0x1204>
    1d4e:	9a af       	std	Y+58, r25	; 0x3a
    1d50:	89 af       	std	Y+57, r24	; 0x39

                        _delay_ms(220);

                    }

                    if (ALMIN==60)
    1d52:	fe 01       	movw	r30, r28
    1d54:	e7 54       	subi	r30, 0x47	; 71
    1d56:	ff 4f       	sbci	r31, 0xFF	; 255
    1d58:	80 81       	ld	r24, Z
    1d5a:	91 81       	ldd	r25, Z+1	; 0x01
    1d5c:	8c 33       	cpi	r24, 0x3C	; 60
    1d5e:	91 05       	cpc	r25, r1
    1d60:	09 f0       	breq	.+2      	; 0x1d64 <main+0x121e>
    1d62:	8a c0       	rjmp	.+276    	; 0x1e78 <main+0x1332>

                    {

                        if (ALHOU<24)
    1d64:	fe 01       	movw	r30, r28
    1d66:	e9 54       	subi	r30, 0x49	; 73
    1d68:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6a:	80 81       	ld	r24, Z
    1d6c:	91 81       	ldd	r25, Z+1	; 0x01
    1d6e:	88 31       	cpi	r24, 0x18	; 24
    1d70:	91 05       	cpc	r25, r1
    1d72:	5c f4       	brge	.+22     	; 0x1d8a <main+0x1244>

                        {

                            ALHOU++;
    1d74:	de 01       	movw	r26, r28
    1d76:	a9 54       	subi	r26, 0x49	; 73
    1d78:	bf 4f       	sbci	r27, 0xFF	; 255
    1d7a:	fe 01       	movw	r30, r28
    1d7c:	e9 54       	subi	r30, 0x49	; 73
    1d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d80:	80 81       	ld	r24, Z
    1d82:	91 81       	ldd	r25, Z+1	; 0x01
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	8d 93       	st	X+, r24
    1d88:	9c 93       	st	X, r25

                        }

                        ALMIN=0;
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e7 54       	subi	r30, 0x47	; 71
    1d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d90:	11 82       	std	Z+1, r1	; 0x01
    1d92:	10 82       	st	Z, r1
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	ac e5       	ldi	r26, 0x5C	; 92
    1d9a:	b3 e4       	ldi	r27, 0x43	; 67
    1d9c:	8d ab       	std	Y+53, r24	; 0x35
    1d9e:	9e ab       	std	Y+54, r25	; 0x36
    1da0:	af ab       	std	Y+55, r26	; 0x37
    1da2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1da4:	6d a9       	ldd	r22, Y+53	; 0x35
    1da6:	7e a9       	ldd	r23, Y+54	; 0x36
    1da8:	8f a9       	ldd	r24, Y+55	; 0x37
    1daa:	98 ad       	ldd	r25, Y+56	; 0x38
    1dac:	20 e0       	ldi	r18, 0x00	; 0
    1dae:	30 e0       	ldi	r19, 0x00	; 0
    1db0:	4a ef       	ldi	r20, 0xFA	; 250
    1db2:	54 e4       	ldi	r21, 0x44	; 68
    1db4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	89 ab       	std	Y+49, r24	; 0x31
    1dbe:	9a ab       	std	Y+50, r25	; 0x32
    1dc0:	ab ab       	std	Y+51, r26	; 0x33
    1dc2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1dc4:	69 a9       	ldd	r22, Y+49	; 0x31
    1dc6:	7a a9       	ldd	r23, Y+50	; 0x32
    1dc8:	8b a9       	ldd	r24, Y+51	; 0x33
    1dca:	9c a9       	ldd	r25, Y+52	; 0x34
    1dcc:	20 e0       	ldi	r18, 0x00	; 0
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	40 e8       	ldi	r20, 0x80	; 128
    1dd2:	5f e3       	ldi	r21, 0x3F	; 63
    1dd4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1dd8:	88 23       	and	r24, r24
    1dda:	2c f4       	brge	.+10     	; 0x1de6 <main+0x12a0>
		__ticks = 1;
    1ddc:	81 e0       	ldi	r24, 0x01	; 1
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	98 ab       	std	Y+48, r25	; 0x30
    1de2:	8f a7       	std	Y+47, r24	; 0x2f
    1de4:	3f c0       	rjmp	.+126    	; 0x1e64 <main+0x131e>
	else if (__tmp > 65535)
    1de6:	69 a9       	ldd	r22, Y+49	; 0x31
    1de8:	7a a9       	ldd	r23, Y+50	; 0x32
    1dea:	8b a9       	ldd	r24, Y+51	; 0x33
    1dec:	9c a9       	ldd	r25, Y+52	; 0x34
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	3f ef       	ldi	r19, 0xFF	; 255
    1df2:	4f e7       	ldi	r20, 0x7F	; 127
    1df4:	57 e4       	ldi	r21, 0x47	; 71
    1df6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1dfa:	18 16       	cp	r1, r24
    1dfc:	4c f5       	brge	.+82     	; 0x1e50 <main+0x130a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dfe:	6d a9       	ldd	r22, Y+53	; 0x35
    1e00:	7e a9       	ldd	r23, Y+54	; 0x36
    1e02:	8f a9       	ldd	r24, Y+55	; 0x37
    1e04:	98 ad       	ldd	r25, Y+56	; 0x38
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e2       	ldi	r20, 0x20	; 32
    1e0c:	51 e4       	ldi	r21, 0x41	; 65
    1e0e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e12:	dc 01       	movw	r26, r24
    1e14:	cb 01       	movw	r24, r22
    1e16:	bc 01       	movw	r22, r24
    1e18:	cd 01       	movw	r24, r26
    1e1a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	98 ab       	std	Y+48, r25	; 0x30
    1e24:	8f a7       	std	Y+47, r24	; 0x2f
    1e26:	0f c0       	rjmp	.+30     	; 0x1e46 <main+0x1300>
    1e28:	88 ec       	ldi	r24, 0xC8	; 200
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	9e a7       	std	Y+46, r25	; 0x2e
    1e2e:	8d a7       	std	Y+45, r24	; 0x2d
    1e30:	8d a5       	ldd	r24, Y+45	; 0x2d
    1e32:	9e a5       	ldd	r25, Y+46	; 0x2e
    1e34:	01 97       	sbiw	r24, 0x01	; 1
    1e36:	f1 f7       	brne	.-4      	; 0x1e34 <main+0x12ee>
    1e38:	9e a7       	std	Y+46, r25	; 0x2e
    1e3a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e3c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e3e:	98 a9       	ldd	r25, Y+48	; 0x30
    1e40:	01 97       	sbiw	r24, 0x01	; 1
    1e42:	98 ab       	std	Y+48, r25	; 0x30
    1e44:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e46:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e48:	98 a9       	ldd	r25, Y+48	; 0x30
    1e4a:	00 97       	sbiw	r24, 0x00	; 0
    1e4c:	69 f7       	brne	.-38     	; 0x1e28 <main+0x12e2>
    1e4e:	14 c0       	rjmp	.+40     	; 0x1e78 <main+0x1332>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e50:	69 a9       	ldd	r22, Y+49	; 0x31
    1e52:	7a a9       	ldd	r23, Y+50	; 0x32
    1e54:	8b a9       	ldd	r24, Y+51	; 0x33
    1e56:	9c a9       	ldd	r25, Y+52	; 0x34
    1e58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	98 ab       	std	Y+48, r25	; 0x30
    1e62:	8f a7       	std	Y+47, r24	; 0x2f
    1e64:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e66:	98 a9       	ldd	r25, Y+48	; 0x30
    1e68:	9c a7       	std	Y+44, r25	; 0x2c
    1e6a:	8b a7       	std	Y+43, r24	; 0x2b
    1e6c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e6e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e70:	01 97       	sbiw	r24, 0x01	; 1
    1e72:	f1 f7       	brne	.-4      	; 0x1e70 <main+0x132a>
    1e74:	9c a7       	std	Y+44, r25	; 0x2c
    1e76:	8b a7       	std	Y+43, r24	; 0x2b

                    }

            }

            if (bit_is_clear(PINA,1))
    1e78:	e9 e3       	ldi	r30, 0x39	; 57
    1e7a:	f0 e0       	ldi	r31, 0x00	; 0
    1e7c:	80 81       	ld	r24, Z
    1e7e:	88 2f       	mov	r24, r24
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	82 70       	andi	r24, 0x02	; 2
    1e84:	90 70       	andi	r25, 0x00	; 0
    1e86:	00 97       	sbiw	r24, 0x00	; 0
    1e88:	09 f0       	breq	.+2      	; 0x1e8c <main+0x1346>
    1e8a:	86 c0       	rjmp	.+268    	; 0x1f98 <main+0x1452>

            {

                if (ALMIN>0)
    1e8c:	fe 01       	movw	r30, r28
    1e8e:	e7 54       	subi	r30, 0x47	; 71
    1e90:	ff 4f       	sbci	r31, 0xFF	; 255
    1e92:	80 81       	ld	r24, Z
    1e94:	91 81       	ldd	r25, Z+1	; 0x01
    1e96:	18 16       	cp	r1, r24
    1e98:	19 06       	cpc	r1, r25
    1e9a:	0c f0       	brlt	.+2      	; 0x1e9e <main+0x1358>
    1e9c:	7d c0       	rjmp	.+250    	; 0x1f98 <main+0x1452>

                {

                    ALMIN--;
    1e9e:	de 01       	movw	r26, r28
    1ea0:	a7 54       	subi	r26, 0x47	; 71
    1ea2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	e7 54       	subi	r30, 0x47	; 71
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	80 81       	ld	r24, Z
    1eac:	91 81       	ldd	r25, Z+1	; 0x01
    1eae:	01 97       	sbiw	r24, 0x01	; 1
    1eb0:	8d 93       	st	X+, r24
    1eb2:	9c 93       	st	X, r25
    1eb4:	80 e0       	ldi	r24, 0x00	; 0
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	ac e5       	ldi	r26, 0x5C	; 92
    1eba:	b3 e4       	ldi	r27, 0x43	; 67
    1ebc:	8f a3       	std	Y+39, r24	; 0x27
    1ebe:	98 a7       	std	Y+40, r25	; 0x28
    1ec0:	a9 a7       	std	Y+41, r26	; 0x29
    1ec2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ec4:	6f a1       	ldd	r22, Y+39	; 0x27
    1ec6:	78 a5       	ldd	r23, Y+40	; 0x28
    1ec8:	89 a5       	ldd	r24, Y+41	; 0x29
    1eca:	9a a5       	ldd	r25, Y+42	; 0x2a
    1ecc:	20 e0       	ldi	r18, 0x00	; 0
    1ece:	30 e0       	ldi	r19, 0x00	; 0
    1ed0:	4a ef       	ldi	r20, 0xFA	; 250
    1ed2:	54 e4       	ldi	r21, 0x44	; 68
    1ed4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ed8:	dc 01       	movw	r26, r24
    1eda:	cb 01       	movw	r24, r22
    1edc:	8b a3       	std	Y+35, r24	; 0x23
    1ede:	9c a3       	std	Y+36, r25	; 0x24
    1ee0:	ad a3       	std	Y+37, r26	; 0x25
    1ee2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1ee4:	6b a1       	ldd	r22, Y+35	; 0x23
    1ee6:	7c a1       	ldd	r23, Y+36	; 0x24
    1ee8:	8d a1       	ldd	r24, Y+37	; 0x25
    1eea:	9e a1       	ldd	r25, Y+38	; 0x26
    1eec:	20 e0       	ldi	r18, 0x00	; 0
    1eee:	30 e0       	ldi	r19, 0x00	; 0
    1ef0:	40 e8       	ldi	r20, 0x80	; 128
    1ef2:	5f e3       	ldi	r21, 0x3F	; 63
    1ef4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ef8:	88 23       	and	r24, r24
    1efa:	2c f4       	brge	.+10     	; 0x1f06 <main+0x13c0>
		__ticks = 1;
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	9a a3       	std	Y+34, r25	; 0x22
    1f02:	89 a3       	std	Y+33, r24	; 0x21
    1f04:	3f c0       	rjmp	.+126    	; 0x1f84 <main+0x143e>
	else if (__tmp > 65535)
    1f06:	6b a1       	ldd	r22, Y+35	; 0x23
    1f08:	7c a1       	ldd	r23, Y+36	; 0x24
    1f0a:	8d a1       	ldd	r24, Y+37	; 0x25
    1f0c:	9e a1       	ldd	r25, Y+38	; 0x26
    1f0e:	20 e0       	ldi	r18, 0x00	; 0
    1f10:	3f ef       	ldi	r19, 0xFF	; 255
    1f12:	4f e7       	ldi	r20, 0x7F	; 127
    1f14:	57 e4       	ldi	r21, 0x47	; 71
    1f16:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f1a:	18 16       	cp	r1, r24
    1f1c:	4c f5       	brge	.+82     	; 0x1f70 <main+0x142a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f1e:	6f a1       	ldd	r22, Y+39	; 0x27
    1f20:	78 a5       	ldd	r23, Y+40	; 0x28
    1f22:	89 a5       	ldd	r24, Y+41	; 0x29
    1f24:	9a a5       	ldd	r25, Y+42	; 0x2a
    1f26:	20 e0       	ldi	r18, 0x00	; 0
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	40 e2       	ldi	r20, 0x20	; 32
    1f2c:	51 e4       	ldi	r21, 0x41	; 65
    1f2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f32:	dc 01       	movw	r26, r24
    1f34:	cb 01       	movw	r24, r22
    1f36:	bc 01       	movw	r22, r24
    1f38:	cd 01       	movw	r24, r26
    1f3a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f3e:	dc 01       	movw	r26, r24
    1f40:	cb 01       	movw	r24, r22
    1f42:	9a a3       	std	Y+34, r25	; 0x22
    1f44:	89 a3       	std	Y+33, r24	; 0x21
    1f46:	0f c0       	rjmp	.+30     	; 0x1f66 <main+0x1420>
    1f48:	88 ec       	ldi	r24, 0xC8	; 200
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	98 a3       	std	Y+32, r25	; 0x20
    1f4e:	8f 8f       	std	Y+31, r24	; 0x1f
    1f50:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f52:	98 a1       	ldd	r25, Y+32	; 0x20
    1f54:	01 97       	sbiw	r24, 0x01	; 1
    1f56:	f1 f7       	brne	.-4      	; 0x1f54 <main+0x140e>
    1f58:	98 a3       	std	Y+32, r25	; 0x20
    1f5a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f5c:	89 a1       	ldd	r24, Y+33	; 0x21
    1f5e:	9a a1       	ldd	r25, Y+34	; 0x22
    1f60:	01 97       	sbiw	r24, 0x01	; 1
    1f62:	9a a3       	std	Y+34, r25	; 0x22
    1f64:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f66:	89 a1       	ldd	r24, Y+33	; 0x21
    1f68:	9a a1       	ldd	r25, Y+34	; 0x22
    1f6a:	00 97       	sbiw	r24, 0x00	; 0
    1f6c:	69 f7       	brne	.-38     	; 0x1f48 <main+0x1402>
    1f6e:	14 c0       	rjmp	.+40     	; 0x1f98 <main+0x1452>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f70:	6b a1       	ldd	r22, Y+35	; 0x23
    1f72:	7c a1       	ldd	r23, Y+36	; 0x24
    1f74:	8d a1       	ldd	r24, Y+37	; 0x25
    1f76:	9e a1       	ldd	r25, Y+38	; 0x26
    1f78:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f7c:	dc 01       	movw	r26, r24
    1f7e:	cb 01       	movw	r24, r22
    1f80:	9a a3       	std	Y+34, r25	; 0x22
    1f82:	89 a3       	std	Y+33, r24	; 0x21
    1f84:	89 a1       	ldd	r24, Y+33	; 0x21
    1f86:	9a a1       	ldd	r25, Y+34	; 0x22
    1f88:	9e 8f       	std	Y+30, r25	; 0x1e
    1f8a:	8d 8f       	std	Y+29, r24	; 0x1d
    1f8c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f8e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f90:	01 97       	sbiw	r24, 0x01	; 1
    1f92:	f1 f7       	brne	.-4      	; 0x1f90 <main+0x144a>
    1f94:	9e 8f       	std	Y+30, r25	; 0x1e
    1f96:	8d 8f       	std	Y+29, r24	; 0x1d

                }

            }

            if (bit_is_clear(PINA,2))
    1f98:	e9 e3       	ldi	r30, 0x39	; 57
    1f9a:	f0 e0       	ldi	r31, 0x00	; 0
    1f9c:	80 81       	ld	r24, Z
    1f9e:	88 2f       	mov	r24, r24
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	84 70       	andi	r24, 0x04	; 4
    1fa4:	90 70       	andi	r25, 0x00	; 0
    1fa6:	00 97       	sbiw	r24, 0x00	; 0
    1fa8:	09 f0       	breq	.+2      	; 0x1fac <main+0x1466>
    1faa:	92 c0       	rjmp	.+292    	; 0x20d0 <main+0x158a>

            {

                if (ALHOU<24)
    1fac:	fe 01       	movw	r30, r28
    1fae:	e9 54       	subi	r30, 0x49	; 73
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	80 81       	ld	r24, Z
    1fb4:	91 81       	ldd	r25, Z+1	; 0x01
    1fb6:	88 31       	cpi	r24, 0x18	; 24
    1fb8:	91 05       	cpc	r25, r1
    1fba:	5c f4       	brge	.+22     	; 0x1fd2 <main+0x148c>

                {

                    ALHOU++;
    1fbc:	de 01       	movw	r26, r28
    1fbe:	a9 54       	subi	r26, 0x49	; 73
    1fc0:	bf 4f       	sbci	r27, 0xFF	; 255
    1fc2:	fe 01       	movw	r30, r28
    1fc4:	e9 54       	subi	r30, 0x49	; 73
    1fc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc8:	80 81       	ld	r24, Z
    1fca:	91 81       	ldd	r25, Z+1	; 0x01
    1fcc:	01 96       	adiw	r24, 0x01	; 1
    1fce:	8d 93       	st	X+, r24
    1fd0:	9c 93       	st	X, r25
    1fd2:	80 e0       	ldi	r24, 0x00	; 0
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	ac e5       	ldi	r26, 0x5C	; 92
    1fd8:	b3 e4       	ldi	r27, 0x43	; 67
    1fda:	89 8f       	std	Y+25, r24	; 0x19
    1fdc:	9a 8f       	std	Y+26, r25	; 0x1a
    1fde:	ab 8f       	std	Y+27, r26	; 0x1b
    1fe0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fe2:	69 8d       	ldd	r22, Y+25	; 0x19
    1fe4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1fe6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1fe8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1fea:	20 e0       	ldi	r18, 0x00	; 0
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	4a ef       	ldi	r20, 0xFA	; 250
    1ff0:	54 e4       	ldi	r21, 0x44	; 68
    1ff2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ff6:	dc 01       	movw	r26, r24
    1ff8:	cb 01       	movw	r24, r22
    1ffa:	8d 8b       	std	Y+21, r24	; 0x15
    1ffc:	9e 8b       	std	Y+22, r25	; 0x16
    1ffe:	af 8b       	std	Y+23, r26	; 0x17
    2000:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2002:	6d 89       	ldd	r22, Y+21	; 0x15
    2004:	7e 89       	ldd	r23, Y+22	; 0x16
    2006:	8f 89       	ldd	r24, Y+23	; 0x17
    2008:	98 8d       	ldd	r25, Y+24	; 0x18
    200a:	20 e0       	ldi	r18, 0x00	; 0
    200c:	30 e0       	ldi	r19, 0x00	; 0
    200e:	40 e8       	ldi	r20, 0x80	; 128
    2010:	5f e3       	ldi	r21, 0x3F	; 63
    2012:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2016:	88 23       	and	r24, r24
    2018:	2c f4       	brge	.+10     	; 0x2024 <main+0x14de>
		__ticks = 1;
    201a:	81 e0       	ldi	r24, 0x01	; 1
    201c:	90 e0       	ldi	r25, 0x00	; 0
    201e:	9c 8b       	std	Y+20, r25	; 0x14
    2020:	8b 8b       	std	Y+19, r24	; 0x13
    2022:	3f c0       	rjmp	.+126    	; 0x20a2 <main+0x155c>
	else if (__tmp > 65535)
    2024:	6d 89       	ldd	r22, Y+21	; 0x15
    2026:	7e 89       	ldd	r23, Y+22	; 0x16
    2028:	8f 89       	ldd	r24, Y+23	; 0x17
    202a:	98 8d       	ldd	r25, Y+24	; 0x18
    202c:	20 e0       	ldi	r18, 0x00	; 0
    202e:	3f ef       	ldi	r19, 0xFF	; 255
    2030:	4f e7       	ldi	r20, 0x7F	; 127
    2032:	57 e4       	ldi	r21, 0x47	; 71
    2034:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2038:	18 16       	cp	r1, r24
    203a:	4c f5       	brge	.+82     	; 0x208e <main+0x1548>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    203c:	69 8d       	ldd	r22, Y+25	; 0x19
    203e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2040:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2042:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	30 e0       	ldi	r19, 0x00	; 0
    2048:	40 e2       	ldi	r20, 0x20	; 32
    204a:	51 e4       	ldi	r21, 0x41	; 65
    204c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2050:	dc 01       	movw	r26, r24
    2052:	cb 01       	movw	r24, r22
    2054:	bc 01       	movw	r22, r24
    2056:	cd 01       	movw	r24, r26
    2058:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    205c:	dc 01       	movw	r26, r24
    205e:	cb 01       	movw	r24, r22
    2060:	9c 8b       	std	Y+20, r25	; 0x14
    2062:	8b 8b       	std	Y+19, r24	; 0x13
    2064:	0f c0       	rjmp	.+30     	; 0x2084 <main+0x153e>
    2066:	88 ec       	ldi	r24, 0xC8	; 200
    2068:	90 e0       	ldi	r25, 0x00	; 0
    206a:	9a 8b       	std	Y+18, r25	; 0x12
    206c:	89 8b       	std	Y+17, r24	; 0x11
    206e:	89 89       	ldd	r24, Y+17	; 0x11
    2070:	9a 89       	ldd	r25, Y+18	; 0x12
    2072:	01 97       	sbiw	r24, 0x01	; 1
    2074:	f1 f7       	brne	.-4      	; 0x2072 <main+0x152c>
    2076:	9a 8b       	std	Y+18, r25	; 0x12
    2078:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    207a:	8b 89       	ldd	r24, Y+19	; 0x13
    207c:	9c 89       	ldd	r25, Y+20	; 0x14
    207e:	01 97       	sbiw	r24, 0x01	; 1
    2080:	9c 8b       	std	Y+20, r25	; 0x14
    2082:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2084:	8b 89       	ldd	r24, Y+19	; 0x13
    2086:	9c 89       	ldd	r25, Y+20	; 0x14
    2088:	00 97       	sbiw	r24, 0x00	; 0
    208a:	69 f7       	brne	.-38     	; 0x2066 <main+0x1520>
    208c:	14 c0       	rjmp	.+40     	; 0x20b6 <main+0x1570>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    208e:	6d 89       	ldd	r22, Y+21	; 0x15
    2090:	7e 89       	ldd	r23, Y+22	; 0x16
    2092:	8f 89       	ldd	r24, Y+23	; 0x17
    2094:	98 8d       	ldd	r25, Y+24	; 0x18
    2096:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    209a:	dc 01       	movw	r26, r24
    209c:	cb 01       	movw	r24, r22
    209e:	9c 8b       	std	Y+20, r25	; 0x14
    20a0:	8b 8b       	std	Y+19, r24	; 0x13
    20a2:	8b 89       	ldd	r24, Y+19	; 0x13
    20a4:	9c 89       	ldd	r25, Y+20	; 0x14
    20a6:	98 8b       	std	Y+16, r25	; 0x10
    20a8:	8f 87       	std	Y+15, r24	; 0x0f
    20aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    20ac:	98 89       	ldd	r25, Y+16	; 0x10
    20ae:	01 97       	sbiw	r24, 0x01	; 1
    20b0:	f1 f7       	brne	.-4      	; 0x20ae <main+0x1568>
    20b2:	98 8b       	std	Y+16, r25	; 0x10
    20b4:	8f 87       	std	Y+15, r24	; 0x0f

                }

                _delay_ms(220);

                if (ALHOU==24)
    20b6:	fe 01       	movw	r30, r28
    20b8:	e9 54       	subi	r30, 0x49	; 73
    20ba:	ff 4f       	sbci	r31, 0xFF	; 255
    20bc:	80 81       	ld	r24, Z
    20be:	91 81       	ldd	r25, Z+1	; 0x01
    20c0:	88 31       	cpi	r24, 0x18	; 24
    20c2:	91 05       	cpc	r25, r1
    20c4:	29 f4       	brne	.+10     	; 0x20d0 <main+0x158a>

                {

                    ALHOU=0;
    20c6:	fe 01       	movw	r30, r28
    20c8:	e9 54       	subi	r30, 0x49	; 73
    20ca:	ff 4f       	sbci	r31, 0xFF	; 255
    20cc:	11 82       	std	Z+1, r1	; 0x01
    20ce:	10 82       	st	Z, r1

                }

            }

            if (bit_is_clear(PINA,3))
    20d0:	e9 e3       	ldi	r30, 0x39	; 57
    20d2:	f0 e0       	ldi	r31, 0x00	; 0
    20d4:	80 81       	ld	r24, Z
    20d6:	88 2f       	mov	r24, r24
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	88 70       	andi	r24, 0x08	; 8
    20dc:	90 70       	andi	r25, 0x00	; 0
    20de:	00 97       	sbiw	r24, 0x00	; 0
    20e0:	11 f0       	breq	.+4      	; 0x20e6 <main+0x15a0>
    20e2:	0c 94 02 08 	jmp	0x1004	; 0x1004 <main+0x4be>

            {

                if (ALHOU>0)
    20e6:	fe 01       	movw	r30, r28
    20e8:	e9 54       	subi	r30, 0x49	; 73
    20ea:	ff 4f       	sbci	r31, 0xFF	; 255
    20ec:	80 81       	ld	r24, Z
    20ee:	91 81       	ldd	r25, Z+1	; 0x01
    20f0:	18 16       	cp	r1, r24
    20f2:	19 06       	cpc	r1, r25
    20f4:	14 f0       	brlt	.+4      	; 0x20fa <main+0x15b4>
    20f6:	0c 94 02 08 	jmp	0x1004	; 0x1004 <main+0x4be>

                {

                    ALHOU--;
    20fa:	de 01       	movw	r26, r28
    20fc:	a9 54       	subi	r26, 0x49	; 73
    20fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2100:	fe 01       	movw	r30, r28
    2102:	e9 54       	subi	r30, 0x49	; 73
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	80 81       	ld	r24, Z
    2108:	91 81       	ldd	r25, Z+1	; 0x01
    210a:	01 97       	sbiw	r24, 0x01	; 1
    210c:	8d 93       	st	X+, r24
    210e:	9c 93       	st	X, r25
    2110:	80 e0       	ldi	r24, 0x00	; 0
    2112:	90 e0       	ldi	r25, 0x00	; 0
    2114:	ac e5       	ldi	r26, 0x5C	; 92
    2116:	b3 e4       	ldi	r27, 0x43	; 67
    2118:	8b 87       	std	Y+11, r24	; 0x0b
    211a:	9c 87       	std	Y+12, r25	; 0x0c
    211c:	ad 87       	std	Y+13, r26	; 0x0d
    211e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2120:	6b 85       	ldd	r22, Y+11	; 0x0b
    2122:	7c 85       	ldd	r23, Y+12	; 0x0c
    2124:	8d 85       	ldd	r24, Y+13	; 0x0d
    2126:	9e 85       	ldd	r25, Y+14	; 0x0e
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	4a ef       	ldi	r20, 0xFA	; 250
    212e:	54 e4       	ldi	r21, 0x44	; 68
    2130:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2134:	dc 01       	movw	r26, r24
    2136:	cb 01       	movw	r24, r22
    2138:	8f 83       	std	Y+7, r24	; 0x07
    213a:	98 87       	std	Y+8, r25	; 0x08
    213c:	a9 87       	std	Y+9, r26	; 0x09
    213e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2140:	6f 81       	ldd	r22, Y+7	; 0x07
    2142:	78 85       	ldd	r23, Y+8	; 0x08
    2144:	89 85       	ldd	r24, Y+9	; 0x09
    2146:	9a 85       	ldd	r25, Y+10	; 0x0a
    2148:	20 e0       	ldi	r18, 0x00	; 0
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	40 e8       	ldi	r20, 0x80	; 128
    214e:	5f e3       	ldi	r21, 0x3F	; 63
    2150:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2154:	88 23       	and	r24, r24
    2156:	2c f4       	brge	.+10     	; 0x2162 <main+0x161c>
		__ticks = 1;
    2158:	81 e0       	ldi	r24, 0x01	; 1
    215a:	90 e0       	ldi	r25, 0x00	; 0
    215c:	9e 83       	std	Y+6, r25	; 0x06
    215e:	8d 83       	std	Y+5, r24	; 0x05
    2160:	40 c0       	rjmp	.+128    	; 0x21e2 <main+0x169c>
	else if (__tmp > 65535)
    2162:	6f 81       	ldd	r22, Y+7	; 0x07
    2164:	78 85       	ldd	r23, Y+8	; 0x08
    2166:	89 85       	ldd	r24, Y+9	; 0x09
    2168:	9a 85       	ldd	r25, Y+10	; 0x0a
    216a:	20 e0       	ldi	r18, 0x00	; 0
    216c:	3f ef       	ldi	r19, 0xFF	; 255
    216e:	4f e7       	ldi	r20, 0x7F	; 127
    2170:	57 e4       	ldi	r21, 0x47	; 71
    2172:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2176:	18 16       	cp	r1, r24
    2178:	54 f5       	brge	.+84     	; 0x21ce <main+0x1688>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    217a:	6b 85       	ldd	r22, Y+11	; 0x0b
    217c:	7c 85       	ldd	r23, Y+12	; 0x0c
    217e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2180:	9e 85       	ldd	r25, Y+14	; 0x0e
    2182:	20 e0       	ldi	r18, 0x00	; 0
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	40 e2       	ldi	r20, 0x20	; 32
    2188:	51 e4       	ldi	r21, 0x41	; 65
    218a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    218e:	dc 01       	movw	r26, r24
    2190:	cb 01       	movw	r24, r22
    2192:	bc 01       	movw	r22, r24
    2194:	cd 01       	movw	r24, r26
    2196:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    219a:	dc 01       	movw	r26, r24
    219c:	cb 01       	movw	r24, r22
    219e:	9e 83       	std	Y+6, r25	; 0x06
    21a0:	8d 83       	std	Y+5, r24	; 0x05
    21a2:	0f c0       	rjmp	.+30     	; 0x21c2 <main+0x167c>
    21a4:	88 ec       	ldi	r24, 0xC8	; 200
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	9c 83       	std	Y+4, r25	; 0x04
    21aa:	8b 83       	std	Y+3, r24	; 0x03
    21ac:	8b 81       	ldd	r24, Y+3	; 0x03
    21ae:	9c 81       	ldd	r25, Y+4	; 0x04
    21b0:	01 97       	sbiw	r24, 0x01	; 1
    21b2:	f1 f7       	brne	.-4      	; 0x21b0 <main+0x166a>
    21b4:	9c 83       	std	Y+4, r25	; 0x04
    21b6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21b8:	8d 81       	ldd	r24, Y+5	; 0x05
    21ba:	9e 81       	ldd	r25, Y+6	; 0x06
    21bc:	01 97       	sbiw	r24, 0x01	; 1
    21be:	9e 83       	std	Y+6, r25	; 0x06
    21c0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21c2:	8d 81       	ldd	r24, Y+5	; 0x05
    21c4:	9e 81       	ldd	r25, Y+6	; 0x06
    21c6:	00 97       	sbiw	r24, 0x00	; 0
    21c8:	69 f7       	brne	.-38     	; 0x21a4 <main+0x165e>
    21ca:	0c 94 02 08 	jmp	0x1004	; 0x1004 <main+0x4be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ce:	6f 81       	ldd	r22, Y+7	; 0x07
    21d0:	78 85       	ldd	r23, Y+8	; 0x08
    21d2:	89 85       	ldd	r24, Y+9	; 0x09
    21d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    21d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	9e 83       	std	Y+6, r25	; 0x06
    21e0:	8d 83       	std	Y+5, r24	; 0x05
    21e2:	8d 81       	ldd	r24, Y+5	; 0x05
    21e4:	9e 81       	ldd	r25, Y+6	; 0x06
    21e6:	9a 83       	std	Y+2, r25	; 0x02
    21e8:	89 83       	std	Y+1, r24	; 0x01
    21ea:	89 81       	ldd	r24, Y+1	; 0x01
    21ec:	9a 81       	ldd	r25, Y+2	; 0x02
    21ee:	01 97       	sbiw	r24, 0x01	; 1
    21f0:	f1 f7       	brne	.-4      	; 0x21ee <main+0x16a8>
    21f2:	9a 83       	std	Y+2, r25	; 0x02
    21f4:	89 83       	std	Y+1, r24	; 0x01
    21f6:	0c 94 02 08 	jmp	0x1004	; 0x1004 <main+0x4be>

000021fa <__vector_7>:
}


ISR(TIMER1_COMPA_vect)

{
    21fa:	1f 92       	push	r1
    21fc:	0f 92       	push	r0
    21fe:	0f b6       	in	r0, 0x3f	; 63
    2200:	0f 92       	push	r0
    2202:	11 24       	eor	r1, r1
    2204:	8f 93       	push	r24
    2206:	9f 93       	push	r25
    2208:	df 93       	push	r29
    220a:	cf 93       	push	r28
    220c:	cd b7       	in	r28, 0x3d	; 61
    220e:	de b7       	in	r29, 0x3e	; 62

    if (SEC<60)
    2210:	80 91 84 00 	lds	r24, 0x0084
    2214:	90 91 85 00 	lds	r25, 0x0085
    2218:	8c 33       	cpi	r24, 0x3C	; 60
    221a:	91 05       	cpc	r25, r1
    221c:	4c f4       	brge	.+18     	; 0x2230 <__vector_7+0x36>

    {

        SEC++;
    221e:	80 91 84 00 	lds	r24, 0x0084
    2222:	90 91 85 00 	lds	r25, 0x0085
    2226:	01 96       	adiw	r24, 0x01	; 1
    2228:	90 93 85 00 	sts	0x0085, r25
    222c:	80 93 84 00 	sts	0x0084, r24

    }

    if (SEC==60)
    2230:	80 91 84 00 	lds	r24, 0x0084
    2234:	90 91 85 00 	lds	r25, 0x0085
    2238:	8c 33       	cpi	r24, 0x3C	; 60
    223a:	91 05       	cpc	r25, r1
    223c:	a1 f4       	brne	.+40     	; 0x2266 <__vector_7+0x6c>

    {

        if (MIN<60)
    223e:	80 91 86 00 	lds	r24, 0x0086
    2242:	90 91 87 00 	lds	r25, 0x0087
    2246:	8c 33       	cpi	r24, 0x3C	; 60
    2248:	91 05       	cpc	r25, r1
    224a:	4c f4       	brge	.+18     	; 0x225e <__vector_7+0x64>

        {

            MIN++;
    224c:	80 91 86 00 	lds	r24, 0x0086
    2250:	90 91 87 00 	lds	r25, 0x0087
    2254:	01 96       	adiw	r24, 0x01	; 1
    2256:	90 93 87 00 	sts	0x0087, r25
    225a:	80 93 86 00 	sts	0x0086, r24

        }

        SEC=0;
    225e:	10 92 85 00 	sts	0x0085, r1
    2262:	10 92 84 00 	sts	0x0084, r1

    }

    if (MIN==60)
    2266:	80 91 86 00 	lds	r24, 0x0086
    226a:	90 91 87 00 	lds	r25, 0x0087
    226e:	8c 33       	cpi	r24, 0x3C	; 60
    2270:	91 05       	cpc	r25, r1
    2272:	a1 f4       	brne	.+40     	; 0x229c <__vector_7+0xa2>

    {

        if (HOU<24)
    2274:	80 91 88 00 	lds	r24, 0x0088
    2278:	90 91 89 00 	lds	r25, 0x0089
    227c:	88 31       	cpi	r24, 0x18	; 24
    227e:	91 05       	cpc	r25, r1
    2280:	4c f4       	brge	.+18     	; 0x2294 <__vector_7+0x9a>

        {

            HOU++;
    2282:	80 91 88 00 	lds	r24, 0x0088
    2286:	90 91 89 00 	lds	r25, 0x0089
    228a:	01 96       	adiw	r24, 0x01	; 1
    228c:	90 93 89 00 	sts	0x0089, r25
    2290:	80 93 88 00 	sts	0x0088, r24

        }

        MIN=0;
    2294:	10 92 87 00 	sts	0x0087, r1
    2298:	10 92 86 00 	sts	0x0086, r1

    }

    if (HOU==24)
    229c:	80 91 88 00 	lds	r24, 0x0088
    22a0:	90 91 89 00 	lds	r25, 0x0089
    22a4:	88 31       	cpi	r24, 0x18	; 24
    22a6:	91 05       	cpc	r25, r1
    22a8:	21 f4       	brne	.+8      	; 0x22b2 <__vector_7+0xb8>

    {

        HOU=0;
    22aa:	10 92 89 00 	sts	0x0089, r1
    22ae:	10 92 88 00 	sts	0x0088, r1

    }


}
    22b2:	cf 91       	pop	r28
    22b4:	df 91       	pop	r29
    22b6:	9f 91       	pop	r25
    22b8:	8f 91       	pop	r24
    22ba:	0f 90       	pop	r0
    22bc:	0f be       	out	0x3f, r0	; 63
    22be:	0f 90       	pop	r0
    22c0:	1f 90       	pop	r1
    22c2:	18 95       	reti

000022c4 <send_a_command>:


void send_a_command(unsigned char command)

{
    22c4:	df 93       	push	r29
    22c6:	cf 93       	push	r28
    22c8:	cd b7       	in	r28, 0x3d	; 61
    22ca:	de b7       	in	r29, 0x3e	; 62
    22cc:	2f 97       	sbiw	r28, 0x0f	; 15
    22ce:	0f b6       	in	r0, 0x3f	; 63
    22d0:	f8 94       	cli
    22d2:	de bf       	out	0x3e, r29	; 62
    22d4:	0f be       	out	0x3f, r0	; 63
    22d6:	cd bf       	out	0x3d, r28	; 61
    22d8:	8f 87       	std	Y+15, r24	; 0x0f

    PORTC = command;
    22da:	e5 e3       	ldi	r30, 0x35	; 53
    22dc:	f0 e0       	ldi	r31, 0x00	; 0
    22de:	8f 85       	ldd	r24, Y+15	; 0x0f
    22e0:	80 83       	st	Z, r24

    PORTD &= ~ (1<<registerselection);
    22e2:	a2 e3       	ldi	r26, 0x32	; 50
    22e4:	b0 e0       	ldi	r27, 0x00	; 0
    22e6:	e2 e3       	ldi	r30, 0x32	; 50
    22e8:	f0 e0       	ldi	r31, 0x00	; 0
    22ea:	80 81       	ld	r24, Z
    22ec:	8f 7b       	andi	r24, 0xBF	; 191
    22ee:	8c 93       	st	X, r24

    PORTD |= 1<<enable;
    22f0:	a2 e3       	ldi	r26, 0x32	; 50
    22f2:	b0 e0       	ldi	r27, 0x00	; 0
    22f4:	e2 e3       	ldi	r30, 0x32	; 50
    22f6:	f0 e0       	ldi	r31, 0x00	; 0
    22f8:	80 81       	ld	r24, Z
    22fa:	80 62       	ori	r24, 0x20	; 32
    22fc:	8c 93       	st	X, r24
    22fe:	80 e0       	ldi	r24, 0x00	; 0
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	a0 e4       	ldi	r26, 0x40	; 64
    2304:	b0 e4       	ldi	r27, 0x40	; 64
    2306:	8b 87       	std	Y+11, r24	; 0x0b
    2308:	9c 87       	std	Y+12, r25	; 0x0c
    230a:	ad 87       	std	Y+13, r26	; 0x0d
    230c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    230e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2310:	7c 85       	ldd	r23, Y+12	; 0x0c
    2312:	8d 85       	ldd	r24, Y+13	; 0x0d
    2314:	9e 85       	ldd	r25, Y+14	; 0x0e
    2316:	20 e0       	ldi	r18, 0x00	; 0
    2318:	30 e0       	ldi	r19, 0x00	; 0
    231a:	4a ef       	ldi	r20, 0xFA	; 250
    231c:	54 e4       	ldi	r21, 0x44	; 68
    231e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2322:	dc 01       	movw	r26, r24
    2324:	cb 01       	movw	r24, r22
    2326:	8f 83       	std	Y+7, r24	; 0x07
    2328:	98 87       	std	Y+8, r25	; 0x08
    232a:	a9 87       	std	Y+9, r26	; 0x09
    232c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    232e:	6f 81       	ldd	r22, Y+7	; 0x07
    2330:	78 85       	ldd	r23, Y+8	; 0x08
    2332:	89 85       	ldd	r24, Y+9	; 0x09
    2334:	9a 85       	ldd	r25, Y+10	; 0x0a
    2336:	20 e0       	ldi	r18, 0x00	; 0
    2338:	30 e0       	ldi	r19, 0x00	; 0
    233a:	40 e8       	ldi	r20, 0x80	; 128
    233c:	5f e3       	ldi	r21, 0x3F	; 63
    233e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2342:	88 23       	and	r24, r24
    2344:	2c f4       	brge	.+10     	; 0x2350 <send_a_command+0x8c>
		__ticks = 1;
    2346:	81 e0       	ldi	r24, 0x01	; 1
    2348:	90 e0       	ldi	r25, 0x00	; 0
    234a:	9e 83       	std	Y+6, r25	; 0x06
    234c:	8d 83       	std	Y+5, r24	; 0x05
    234e:	3f c0       	rjmp	.+126    	; 0x23ce <send_a_command+0x10a>
	else if (__tmp > 65535)
    2350:	6f 81       	ldd	r22, Y+7	; 0x07
    2352:	78 85       	ldd	r23, Y+8	; 0x08
    2354:	89 85       	ldd	r24, Y+9	; 0x09
    2356:	9a 85       	ldd	r25, Y+10	; 0x0a
    2358:	20 e0       	ldi	r18, 0x00	; 0
    235a:	3f ef       	ldi	r19, 0xFF	; 255
    235c:	4f e7       	ldi	r20, 0x7F	; 127
    235e:	57 e4       	ldi	r21, 0x47	; 71
    2360:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2364:	18 16       	cp	r1, r24
    2366:	4c f5       	brge	.+82     	; 0x23ba <send_a_command+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2368:	6b 85       	ldd	r22, Y+11	; 0x0b
    236a:	7c 85       	ldd	r23, Y+12	; 0x0c
    236c:	8d 85       	ldd	r24, Y+13	; 0x0d
    236e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2370:	20 e0       	ldi	r18, 0x00	; 0
    2372:	30 e0       	ldi	r19, 0x00	; 0
    2374:	40 e2       	ldi	r20, 0x20	; 32
    2376:	51 e4       	ldi	r21, 0x41	; 65
    2378:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    237c:	dc 01       	movw	r26, r24
    237e:	cb 01       	movw	r24, r22
    2380:	bc 01       	movw	r22, r24
    2382:	cd 01       	movw	r24, r26
    2384:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2388:	dc 01       	movw	r26, r24
    238a:	cb 01       	movw	r24, r22
    238c:	9e 83       	std	Y+6, r25	; 0x06
    238e:	8d 83       	std	Y+5, r24	; 0x05
    2390:	0f c0       	rjmp	.+30     	; 0x23b0 <send_a_command+0xec>
    2392:	88 ec       	ldi	r24, 0xC8	; 200
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	9c 83       	std	Y+4, r25	; 0x04
    2398:	8b 83       	std	Y+3, r24	; 0x03
    239a:	8b 81       	ldd	r24, Y+3	; 0x03
    239c:	9c 81       	ldd	r25, Y+4	; 0x04
    239e:	01 97       	sbiw	r24, 0x01	; 1
    23a0:	f1 f7       	brne	.-4      	; 0x239e <send_a_command+0xda>
    23a2:	9c 83       	std	Y+4, r25	; 0x04
    23a4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23a6:	8d 81       	ldd	r24, Y+5	; 0x05
    23a8:	9e 81       	ldd	r25, Y+6	; 0x06
    23aa:	01 97       	sbiw	r24, 0x01	; 1
    23ac:	9e 83       	std	Y+6, r25	; 0x06
    23ae:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23b0:	8d 81       	ldd	r24, Y+5	; 0x05
    23b2:	9e 81       	ldd	r25, Y+6	; 0x06
    23b4:	00 97       	sbiw	r24, 0x00	; 0
    23b6:	69 f7       	brne	.-38     	; 0x2392 <send_a_command+0xce>
    23b8:	14 c0       	rjmp	.+40     	; 0x23e2 <send_a_command+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23ba:	6f 81       	ldd	r22, Y+7	; 0x07
    23bc:	78 85       	ldd	r23, Y+8	; 0x08
    23be:	89 85       	ldd	r24, Y+9	; 0x09
    23c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    23c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23c6:	dc 01       	movw	r26, r24
    23c8:	cb 01       	movw	r24, r22
    23ca:	9e 83       	std	Y+6, r25	; 0x06
    23cc:	8d 83       	std	Y+5, r24	; 0x05
    23ce:	8d 81       	ldd	r24, Y+5	; 0x05
    23d0:	9e 81       	ldd	r25, Y+6	; 0x06
    23d2:	9a 83       	std	Y+2, r25	; 0x02
    23d4:	89 83       	std	Y+1, r24	; 0x01
    23d6:	89 81       	ldd	r24, Y+1	; 0x01
    23d8:	9a 81       	ldd	r25, Y+2	; 0x02
    23da:	01 97       	sbiw	r24, 0x01	; 1
    23dc:	f1 f7       	brne	.-4      	; 0x23da <send_a_command+0x116>
    23de:	9a 83       	std	Y+2, r25	; 0x02
    23e0:	89 83       	std	Y+1, r24	; 0x01

    _delay_ms(3);

    PORTD &= ~1<<enable;
    23e2:	a2 e3       	ldi	r26, 0x32	; 50
    23e4:	b0 e0       	ldi	r27, 0x00	; 0
    23e6:	e2 e3       	ldi	r30, 0x32	; 50
    23e8:	f0 e0       	ldi	r31, 0x00	; 0
    23ea:	80 81       	ld	r24, Z
    23ec:	80 7c       	andi	r24, 0xC0	; 192
    23ee:	8c 93       	st	X, r24

    PORTC = 0xFF;
    23f0:	e5 e3       	ldi	r30, 0x35	; 53
    23f2:	f0 e0       	ldi	r31, 0x00	; 0
    23f4:	8f ef       	ldi	r24, 0xFF	; 255
    23f6:	80 83       	st	Z, r24

}
    23f8:	2f 96       	adiw	r28, 0x0f	; 15
    23fa:	0f b6       	in	r0, 0x3f	; 63
    23fc:	f8 94       	cli
    23fe:	de bf       	out	0x3e, r29	; 62
    2400:	0f be       	out	0x3f, r0	; 63
    2402:	cd bf       	out	0x3d, r28	; 61
    2404:	cf 91       	pop	r28
    2406:	df 91       	pop	r29
    2408:	08 95       	ret

0000240a <send_a_character>:


void send_a_character(unsigned char character)

{
    240a:	df 93       	push	r29
    240c:	cf 93       	push	r28
    240e:	cd b7       	in	r28, 0x3d	; 61
    2410:	de b7       	in	r29, 0x3e	; 62
    2412:	2f 97       	sbiw	r28, 0x0f	; 15
    2414:	0f b6       	in	r0, 0x3f	; 63
    2416:	f8 94       	cli
    2418:	de bf       	out	0x3e, r29	; 62
    241a:	0f be       	out	0x3f, r0	; 63
    241c:	cd bf       	out	0x3d, r28	; 61
    241e:	8f 87       	std	Y+15, r24	; 0x0f

    PORTC = character;
    2420:	e5 e3       	ldi	r30, 0x35	; 53
    2422:	f0 e0       	ldi	r31, 0x00	; 0
    2424:	8f 85       	ldd	r24, Y+15	; 0x0f
    2426:	80 83       	st	Z, r24

    PORTD |= 1<<registerselection;
    2428:	a2 e3       	ldi	r26, 0x32	; 50
    242a:	b0 e0       	ldi	r27, 0x00	; 0
    242c:	e2 e3       	ldi	r30, 0x32	; 50
    242e:	f0 e0       	ldi	r31, 0x00	; 0
    2430:	80 81       	ld	r24, Z
    2432:	80 64       	ori	r24, 0x40	; 64
    2434:	8c 93       	st	X, r24

    PORTD |= 1<<enable;
    2436:	a2 e3       	ldi	r26, 0x32	; 50
    2438:	b0 e0       	ldi	r27, 0x00	; 0
    243a:	e2 e3       	ldi	r30, 0x32	; 50
    243c:	f0 e0       	ldi	r31, 0x00	; 0
    243e:	80 81       	ld	r24, Z
    2440:	80 62       	ori	r24, 0x20	; 32
    2442:	8c 93       	st	X, r24
    2444:	80 e0       	ldi	r24, 0x00	; 0
    2446:	90 e0       	ldi	r25, 0x00	; 0
    2448:	a0 e4       	ldi	r26, 0x40	; 64
    244a:	b0 e4       	ldi	r27, 0x40	; 64
    244c:	8b 87       	std	Y+11, r24	; 0x0b
    244e:	9c 87       	std	Y+12, r25	; 0x0c
    2450:	ad 87       	std	Y+13, r26	; 0x0d
    2452:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2454:	6b 85       	ldd	r22, Y+11	; 0x0b
    2456:	7c 85       	ldd	r23, Y+12	; 0x0c
    2458:	8d 85       	ldd	r24, Y+13	; 0x0d
    245a:	9e 85       	ldd	r25, Y+14	; 0x0e
    245c:	20 e0       	ldi	r18, 0x00	; 0
    245e:	30 e0       	ldi	r19, 0x00	; 0
    2460:	4a ef       	ldi	r20, 0xFA	; 250
    2462:	54 e4       	ldi	r21, 0x44	; 68
    2464:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2468:	dc 01       	movw	r26, r24
    246a:	cb 01       	movw	r24, r22
    246c:	8f 83       	std	Y+7, r24	; 0x07
    246e:	98 87       	std	Y+8, r25	; 0x08
    2470:	a9 87       	std	Y+9, r26	; 0x09
    2472:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2474:	6f 81       	ldd	r22, Y+7	; 0x07
    2476:	78 85       	ldd	r23, Y+8	; 0x08
    2478:	89 85       	ldd	r24, Y+9	; 0x09
    247a:	9a 85       	ldd	r25, Y+10	; 0x0a
    247c:	20 e0       	ldi	r18, 0x00	; 0
    247e:	30 e0       	ldi	r19, 0x00	; 0
    2480:	40 e8       	ldi	r20, 0x80	; 128
    2482:	5f e3       	ldi	r21, 0x3F	; 63
    2484:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2488:	88 23       	and	r24, r24
    248a:	2c f4       	brge	.+10     	; 0x2496 <send_a_character+0x8c>
		__ticks = 1;
    248c:	81 e0       	ldi	r24, 0x01	; 1
    248e:	90 e0       	ldi	r25, 0x00	; 0
    2490:	9e 83       	std	Y+6, r25	; 0x06
    2492:	8d 83       	std	Y+5, r24	; 0x05
    2494:	3f c0       	rjmp	.+126    	; 0x2514 <send_a_character+0x10a>
	else if (__tmp > 65535)
    2496:	6f 81       	ldd	r22, Y+7	; 0x07
    2498:	78 85       	ldd	r23, Y+8	; 0x08
    249a:	89 85       	ldd	r24, Y+9	; 0x09
    249c:	9a 85       	ldd	r25, Y+10	; 0x0a
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	3f ef       	ldi	r19, 0xFF	; 255
    24a2:	4f e7       	ldi	r20, 0x7F	; 127
    24a4:	57 e4       	ldi	r21, 0x47	; 71
    24a6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    24aa:	18 16       	cp	r1, r24
    24ac:	4c f5       	brge	.+82     	; 0x2500 <send_a_character+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    24b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    24b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    24b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    24b6:	20 e0       	ldi	r18, 0x00	; 0
    24b8:	30 e0       	ldi	r19, 0x00	; 0
    24ba:	40 e2       	ldi	r20, 0x20	; 32
    24bc:	51 e4       	ldi	r21, 0x41	; 65
    24be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24c2:	dc 01       	movw	r26, r24
    24c4:	cb 01       	movw	r24, r22
    24c6:	bc 01       	movw	r22, r24
    24c8:	cd 01       	movw	r24, r26
    24ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24ce:	dc 01       	movw	r26, r24
    24d0:	cb 01       	movw	r24, r22
    24d2:	9e 83       	std	Y+6, r25	; 0x06
    24d4:	8d 83       	std	Y+5, r24	; 0x05
    24d6:	0f c0       	rjmp	.+30     	; 0x24f6 <send_a_character+0xec>
    24d8:	88 ec       	ldi	r24, 0xC8	; 200
    24da:	90 e0       	ldi	r25, 0x00	; 0
    24dc:	9c 83       	std	Y+4, r25	; 0x04
    24de:	8b 83       	std	Y+3, r24	; 0x03
    24e0:	8b 81       	ldd	r24, Y+3	; 0x03
    24e2:	9c 81       	ldd	r25, Y+4	; 0x04
    24e4:	01 97       	sbiw	r24, 0x01	; 1
    24e6:	f1 f7       	brne	.-4      	; 0x24e4 <send_a_character+0xda>
    24e8:	9c 83       	std	Y+4, r25	; 0x04
    24ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ec:	8d 81       	ldd	r24, Y+5	; 0x05
    24ee:	9e 81       	ldd	r25, Y+6	; 0x06
    24f0:	01 97       	sbiw	r24, 0x01	; 1
    24f2:	9e 83       	std	Y+6, r25	; 0x06
    24f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24f6:	8d 81       	ldd	r24, Y+5	; 0x05
    24f8:	9e 81       	ldd	r25, Y+6	; 0x06
    24fa:	00 97       	sbiw	r24, 0x00	; 0
    24fc:	69 f7       	brne	.-38     	; 0x24d8 <send_a_character+0xce>
    24fe:	14 c0       	rjmp	.+40     	; 0x2528 <send_a_character+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2500:	6f 81       	ldd	r22, Y+7	; 0x07
    2502:	78 85       	ldd	r23, Y+8	; 0x08
    2504:	89 85       	ldd	r24, Y+9	; 0x09
    2506:	9a 85       	ldd	r25, Y+10	; 0x0a
    2508:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    250c:	dc 01       	movw	r26, r24
    250e:	cb 01       	movw	r24, r22
    2510:	9e 83       	std	Y+6, r25	; 0x06
    2512:	8d 83       	std	Y+5, r24	; 0x05
    2514:	8d 81       	ldd	r24, Y+5	; 0x05
    2516:	9e 81       	ldd	r25, Y+6	; 0x06
    2518:	9a 83       	std	Y+2, r25	; 0x02
    251a:	89 83       	std	Y+1, r24	; 0x01
    251c:	89 81       	ldd	r24, Y+1	; 0x01
    251e:	9a 81       	ldd	r25, Y+2	; 0x02
    2520:	01 97       	sbiw	r24, 0x01	; 1
    2522:	f1 f7       	brne	.-4      	; 0x2520 <send_a_character+0x116>
    2524:	9a 83       	std	Y+2, r25	; 0x02
    2526:	89 83       	std	Y+1, r24	; 0x01

    _delay_ms(3);

    PORTD &= ~1<<enable;
    2528:	a2 e3       	ldi	r26, 0x32	; 50
    252a:	b0 e0       	ldi	r27, 0x00	; 0
    252c:	e2 e3       	ldi	r30, 0x32	; 50
    252e:	f0 e0       	ldi	r31, 0x00	; 0
    2530:	80 81       	ld	r24, Z
    2532:	80 7c       	andi	r24, 0xC0	; 192
    2534:	8c 93       	st	X, r24

    PORTC = 0xFF;
    2536:	e5 e3       	ldi	r30, 0x35	; 53
    2538:	f0 e0       	ldi	r31, 0x00	; 0
    253a:	8f ef       	ldi	r24, 0xFF	; 255
    253c:	80 83       	st	Z, r24

}
    253e:	2f 96       	adiw	r28, 0x0f	; 15
    2540:	0f b6       	in	r0, 0x3f	; 63
    2542:	f8 94       	cli
    2544:	de bf       	out	0x3e, r29	; 62
    2546:	0f be       	out	0x3f, r0	; 63
    2548:	cd bf       	out	0x3d, r28	; 61
    254a:	cf 91       	pop	r28
    254c:	df 91       	pop	r29
    254e:	08 95       	ret

00002550 <send_a_string>:

void send_a_string(char *string_of_characters)

{
    2550:	df 93       	push	r29
    2552:	cf 93       	push	r28
    2554:	00 d0       	rcall	.+0      	; 0x2556 <send_a_string+0x6>
    2556:	cd b7       	in	r28, 0x3d	; 61
    2558:	de b7       	in	r29, 0x3e	; 62
    255a:	9a 83       	std	Y+2, r25	; 0x02
    255c:	89 83       	std	Y+1, r24	; 0x01
    255e:	0b c0       	rjmp	.+22     	; 0x2576 <send_a_string+0x26>

    while(*string_of_characters > 0)

    {

        send_a_character(*string_of_characters++);
    2560:	e9 81       	ldd	r30, Y+1	; 0x01
    2562:	fa 81       	ldd	r31, Y+2	; 0x02
    2564:	20 81       	ld	r18, Z
    2566:	89 81       	ldd	r24, Y+1	; 0x01
    2568:	9a 81       	ldd	r25, Y+2	; 0x02
    256a:	01 96       	adiw	r24, 0x01	; 1
    256c:	9a 83       	std	Y+2, r25	; 0x02
    256e:	89 83       	std	Y+1, r24	; 0x01
    2570:	82 2f       	mov	r24, r18
    2572:	0e 94 05 12 	call	0x240a	; 0x240a <send_a_character>

void send_a_string(char *string_of_characters)

{

    while(*string_of_characters > 0)
    2576:	e9 81       	ldd	r30, Y+1	; 0x01
    2578:	fa 81       	ldd	r31, Y+2	; 0x02
    257a:	80 81       	ld	r24, Z
    257c:	88 23       	and	r24, r24
    257e:	81 f7       	brne	.-32     	; 0x2560 <send_a_string+0x10>

        send_a_character(*string_of_characters++);

    }

}
    2580:	0f 90       	pop	r0
    2582:	0f 90       	pop	r0
    2584:	cf 91       	pop	r28
    2586:	df 91       	pop	r29
    2588:	08 95       	ret

0000258a <__divmodhi4>:
    258a:	97 fb       	bst	r25, 7
    258c:	09 2e       	mov	r0, r25
    258e:	07 26       	eor	r0, r23
    2590:	0a d0       	rcall	.+20     	; 0x25a6 <__divmodhi4_neg1>
    2592:	77 fd       	sbrc	r23, 7
    2594:	04 d0       	rcall	.+8      	; 0x259e <__divmodhi4_neg2>
    2596:	0c d0       	rcall	.+24     	; 0x25b0 <__udivmodhi4>
    2598:	06 d0       	rcall	.+12     	; 0x25a6 <__divmodhi4_neg1>
    259a:	00 20       	and	r0, r0
    259c:	1a f4       	brpl	.+6      	; 0x25a4 <__divmodhi4_exit>

0000259e <__divmodhi4_neg2>:
    259e:	70 95       	com	r23
    25a0:	61 95       	neg	r22
    25a2:	7f 4f       	sbci	r23, 0xFF	; 255

000025a4 <__divmodhi4_exit>:
    25a4:	08 95       	ret

000025a6 <__divmodhi4_neg1>:
    25a6:	f6 f7       	brtc	.-4      	; 0x25a4 <__divmodhi4_exit>
    25a8:	90 95       	com	r25
    25aa:	81 95       	neg	r24
    25ac:	9f 4f       	sbci	r25, 0xFF	; 255
    25ae:	08 95       	ret

000025b0 <__udivmodhi4>:
    25b0:	aa 1b       	sub	r26, r26
    25b2:	bb 1b       	sub	r27, r27
    25b4:	51 e1       	ldi	r21, 0x11	; 17
    25b6:	07 c0       	rjmp	.+14     	; 0x25c6 <__udivmodhi4_ep>

000025b8 <__udivmodhi4_loop>:
    25b8:	aa 1f       	adc	r26, r26
    25ba:	bb 1f       	adc	r27, r27
    25bc:	a6 17       	cp	r26, r22
    25be:	b7 07       	cpc	r27, r23
    25c0:	10 f0       	brcs	.+4      	; 0x25c6 <__udivmodhi4_ep>
    25c2:	a6 1b       	sub	r26, r22
    25c4:	b7 0b       	sbc	r27, r23

000025c6 <__udivmodhi4_ep>:
    25c6:	88 1f       	adc	r24, r24
    25c8:	99 1f       	adc	r25, r25
    25ca:	5a 95       	dec	r21
    25cc:	a9 f7       	brne	.-22     	; 0x25b8 <__udivmodhi4_loop>
    25ce:	80 95       	com	r24
    25d0:	90 95       	com	r25
    25d2:	bc 01       	movw	r22, r24
    25d4:	cd 01       	movw	r24, r26
    25d6:	08 95       	ret

000025d8 <__prologue_saves__>:
    25d8:	2f 92       	push	r2
    25da:	3f 92       	push	r3
    25dc:	4f 92       	push	r4
    25de:	5f 92       	push	r5
    25e0:	6f 92       	push	r6
    25e2:	7f 92       	push	r7
    25e4:	8f 92       	push	r8
    25e6:	9f 92       	push	r9
    25e8:	af 92       	push	r10
    25ea:	bf 92       	push	r11
    25ec:	cf 92       	push	r12
    25ee:	df 92       	push	r13
    25f0:	ef 92       	push	r14
    25f2:	ff 92       	push	r15
    25f4:	0f 93       	push	r16
    25f6:	1f 93       	push	r17
    25f8:	cf 93       	push	r28
    25fa:	df 93       	push	r29
    25fc:	cd b7       	in	r28, 0x3d	; 61
    25fe:	de b7       	in	r29, 0x3e	; 62
    2600:	ca 1b       	sub	r28, r26
    2602:	db 0b       	sbc	r29, r27
    2604:	0f b6       	in	r0, 0x3f	; 63
    2606:	f8 94       	cli
    2608:	de bf       	out	0x3e, r29	; 62
    260a:	0f be       	out	0x3f, r0	; 63
    260c:	cd bf       	out	0x3d, r28	; 61
    260e:	09 94       	ijmp

00002610 <__epilogue_restores__>:
    2610:	2a 88       	ldd	r2, Y+18	; 0x12
    2612:	39 88       	ldd	r3, Y+17	; 0x11
    2614:	48 88       	ldd	r4, Y+16	; 0x10
    2616:	5f 84       	ldd	r5, Y+15	; 0x0f
    2618:	6e 84       	ldd	r6, Y+14	; 0x0e
    261a:	7d 84       	ldd	r7, Y+13	; 0x0d
    261c:	8c 84       	ldd	r8, Y+12	; 0x0c
    261e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2620:	aa 84       	ldd	r10, Y+10	; 0x0a
    2622:	b9 84       	ldd	r11, Y+9	; 0x09
    2624:	c8 84       	ldd	r12, Y+8	; 0x08
    2626:	df 80       	ldd	r13, Y+7	; 0x07
    2628:	ee 80       	ldd	r14, Y+6	; 0x06
    262a:	fd 80       	ldd	r15, Y+5	; 0x05
    262c:	0c 81       	ldd	r16, Y+4	; 0x04
    262e:	1b 81       	ldd	r17, Y+3	; 0x03
    2630:	aa 81       	ldd	r26, Y+2	; 0x02
    2632:	b9 81       	ldd	r27, Y+1	; 0x01
    2634:	ce 0f       	add	r28, r30
    2636:	d1 1d       	adc	r29, r1
    2638:	0f b6       	in	r0, 0x3f	; 63
    263a:	f8 94       	cli
    263c:	de bf       	out	0x3e, r29	; 62
    263e:	0f be       	out	0x3f, r0	; 63
    2640:	cd bf       	out	0x3d, r28	; 61
    2642:	ed 01       	movw	r28, r26
    2644:	08 95       	ret

00002646 <itoa>:
    2646:	fb 01       	movw	r30, r22
    2648:	9f 01       	movw	r18, r30
    264a:	e8 94       	clt
    264c:	42 30       	cpi	r20, 0x02	; 2
    264e:	c4 f0       	brlt	.+48     	; 0x2680 <itoa+0x3a>
    2650:	45 32       	cpi	r20, 0x25	; 37
    2652:	b4 f4       	brge	.+44     	; 0x2680 <itoa+0x3a>
    2654:	4a 30       	cpi	r20, 0x0A	; 10
    2656:	29 f4       	brne	.+10     	; 0x2662 <itoa+0x1c>
    2658:	97 fb       	bst	r25, 7
    265a:	1e f4       	brtc	.+6      	; 0x2662 <itoa+0x1c>
    265c:	90 95       	com	r25
    265e:	81 95       	neg	r24
    2660:	9f 4f       	sbci	r25, 0xFF	; 255
    2662:	64 2f       	mov	r22, r20
    2664:	77 27       	eor	r23, r23
    2666:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <__udivmodhi4>
    266a:	80 5d       	subi	r24, 0xD0	; 208
    266c:	8a 33       	cpi	r24, 0x3A	; 58
    266e:	0c f0       	brlt	.+2      	; 0x2672 <itoa+0x2c>
    2670:	89 5d       	subi	r24, 0xD9	; 217
    2672:	81 93       	st	Z+, r24
    2674:	cb 01       	movw	r24, r22
    2676:	00 97       	sbiw	r24, 0x00	; 0
    2678:	a1 f7       	brne	.-24     	; 0x2662 <itoa+0x1c>
    267a:	16 f4       	brtc	.+4      	; 0x2680 <itoa+0x3a>
    267c:	5d e2       	ldi	r21, 0x2D	; 45
    267e:	51 93       	st	Z+, r21
    2680:	10 82       	st	Z, r1
    2682:	c9 01       	movw	r24, r18
    2684:	0c 94 44 13 	jmp	0x2688	; 0x2688 <strrev>

00002688 <strrev>:
    2688:	dc 01       	movw	r26, r24
    268a:	fc 01       	movw	r30, r24
    268c:	67 2f       	mov	r22, r23
    268e:	71 91       	ld	r23, Z+
    2690:	77 23       	and	r23, r23
    2692:	e1 f7       	brne	.-8      	; 0x268c <strrev+0x4>
    2694:	32 97       	sbiw	r30, 0x02	; 2
    2696:	04 c0       	rjmp	.+8      	; 0x26a0 <strrev+0x18>
    2698:	7c 91       	ld	r23, X
    269a:	6d 93       	st	X+, r22
    269c:	70 83       	st	Z, r23
    269e:	62 91       	ld	r22, -Z
    26a0:	ae 17       	cp	r26, r30
    26a2:	bf 07       	cpc	r27, r31
    26a4:	c8 f3       	brcs	.-14     	; 0x2698 <strrev+0x10>
    26a6:	08 95       	ret

000026a8 <_exit>:
    26a8:	f8 94       	cli

000026aa <__stop_program>:
    26aa:	ff cf       	rjmp	.-2      	; 0x26aa <__stop_program>
